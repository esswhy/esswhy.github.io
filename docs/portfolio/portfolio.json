[
  {
    "path": "portfolio/pca_usda_food/",
    "title": "Principal Component Analysis: USDA Food Nutrient Information",
    "description": "In this project, I used principal component analysis to explore macronutrient and micronutrient information for various food groups listed by the United States Department of Agriculture.",
    "author": [
      {
        "name": "Shuying Yu",
        "url": {}
      }
    ],
    "date": "2022-02-21",
    "categories": [
      "Principal Component Analysis",
      "R"
    ],
    "contents": "\r\n\r\nContents\r\nIntroduction\r\nResearch Question\r\nData and Methods\r\nResults\r\nMinerals\r\nPrincipal Component Analysis\r\nScree Plot\r\nLoadings\r\n\r\nVitamins\r\nPrincipal Component Analysis\r\nScree Plot\r\nLoadings\r\n\r\n\r\nSummary\r\nReferences\r\nData and Literature\r\nR Libraries\r\n\r\n\r\n\r\n\r\nCode\r\n\r\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message= FALSE,\r\n                      fig.align = \"center\")\r\n\r\n#Attach packages\r\nlibrary(tidyverse)\r\nlibrary(here)\r\nlibrary(janitor)\r\nlibrary(ggfortify) \r\nlibrary(RColorBrewer)\r\nlibrary(kableExtra)\r\n\r\n\r\n\r\nIntroduction\r\nIn this project, I used principal component analysis to explore macronutrient and micronutrient information for various food groups from the United States Department of Agriculture’s (USDA) National Nutrient Database or FoodData Central. Principal component analysis (PCA) was conducted on both mineral and vitamin nutrients, and their scree plots and loadings were visualized to assess the amount of variance explained.\r\nResearch Question\r\nCan we use PCA to reduce the number dimensions of the multivariate dataset in order to find clusters or groups of observations and also visually explore interesting relationships between different food groups? Using different nutrients such as minerals and vitamins, can we observe any patterns in the observations or correlations between the variables?\r\nData and Methods\r\nDifferent types of food contain varying levels of macronutrients (protein, fat, carbohydrates) and micronutrients (vitamins and minerals). Food groups were chosen based on their different levels of nutrients and energy (calories) (NIH NIA Know Your Food Groups, Accessed 02/18/2022) that would allow for interesting relationships and correlations between them. One of the food groups I selected was fruits and fruit juices because fruits tend to be low in calories and fat, but may be higher in vitamins, fiber, and carbohydrates. Animal products such as beef, shellfish, and dairy and egg products were chosen because they tend to be higher in calories with higher levels of protein and minerals. Legumes and grains are also high in protein, but may contain lower in calories. As for cereals and grains, they contain a high amount of calories but also high levels of minerals, vitamins, and fiber. Lastly, I chose sweets and fats because they are high in calories, but contain the lowest levels of micronutrients. For macronutrients, “carbohydrates” include unprocessed, minimally processed, and processed starches and natural sugars, whereas “sugar” refers to nutritive and nonutritive sweeteners (e.g., added granulated sugar) (USDA National Agricultural Library, Accessed 02/18/2022). The data is publicly available through the United States Department of Agriculture’s (USDA) National Nutrient Database (USDA FoodData Central, Accessed 02/14/2022).\r\nPCA will be conducted for vitamins and minerals separately to prevent overcrowding of biplots. Data were scaled and biplots were created to visually epxlore relationships between food groups and vitamins or minerals. Scree plots were also created to visualize proportion of variance explained by each principal component. All analyses were conducted in R version 4.1.1 and RStudio version 1.4.1717.\r\nResults\r\nMinerals\r\nPrincipal Component Analysis\r\nFor this PCA, I included the following variables:\r\nenergy or calories (kcal), fiber (g), sugar (g)\r\ncarbohydrate (g), protein (g), fat (g)\r\ncalcium (mg), copper (mcg), iron (mg), magnesium (mg), manganese (mg), phosphorous (g), selenium (mcg), zinc (mg)\r\n\r\n\r\nCode\r\n\r\n########## Read in the data ##########\r\n\r\nfood <- read_csv(here(\"_portfolio\", \"data\", \"usda_nutrients.csv\")) %>% \r\n  \r\n  #Convert variable names to lower case\r\n  clean_names()\r\n\r\n\r\n\r\n########## Subset data for common minerals ##########\r\n\r\nfood_minerals <- food %>% \r\n  \r\n  #Select certain nutrients: calories, macros, and minerals \r\n  select(food_group, short_descrip, \r\n         energy_kcal:fiber_g,\r\n         calcium_mg:zinc_mg) %>% \r\n  \r\n  #Drop missing values\r\n  drop_na() %>% \r\n  \r\n  #Filter food groups: fruits/veggies, grains/legumes, meats/dairy, fats\r\n  filter(food_group %in% c(\"Fruits and Fruit Juices\",\r\n                           \"Cereal Grains and Pasta\", \"Legumes and Legume Products\",\r\n                           \"Dairy and Egg Products\", \"Finfish and Shellfish Products\",\r\n                           \"Beef Products\", \"Sweets\", \"Fats and Oils\"))\r\n\r\n\r\n\r\n########## PCA ##########\r\n\r\nfood_pca <- food_minerals %>% \r\n  \r\n  #Remove factors or strings\r\n  select(-c(food_group,short_descrip)) %>% \r\n  \r\n  #Scale numeric data\r\n  scale() %>% \r\n  \r\n  #Perform PCA\r\n  prcomp\r\n\r\n\r\n#Save loadings into dataframe\r\nloadings_df <- data.frame(food_pca$rotation) %>%\r\n  mutate(axis = row.names(.))\r\n\r\n#Save components into new axis\r\nnew_pts_df <- data.frame(food_pca$x)\r\n\r\n\r\n\r\n########## Biplot ##########\r\n\r\n#Autoplot using ggfortify\r\n#Use ggplot \r\nautoplot(food_pca,\r\n         \r\n         #Associate df with PCA df\r\n         data = food_minerals,\r\n         \r\n         #Show loadings\r\n         loadings = TRUE,\r\n         \r\n         #Color by food group\r\n         #Need UK spelling\r\n         colour = \"food_group\",\r\n         \r\n         #Show PC1 and PC2 label\r\n         loadings.label = TRUE,\r\n         \r\n         #Change color of PC arrows\r\n         loadings.colour = \"cyan2\",\r\n         \r\n         #Change color of PC labels\r\n         loadings.label.colour = \"black\",\r\n         \r\n         #Change position of labels\r\n         loadings.label.vjust = -0.5) +\r\n  \r\n  #Change legend title\r\n  labs(color = \"Food Group\") +\r\n\r\n  #Change color of points\r\n  scale_color_brewer(type = \"qual\", palette = \"Set2\") +\r\n  \r\n  #Focus plot area on limits and allow text outside margins\r\n  coord_cartesian(xlim = c(-0.05,0.12),\r\n                  ylim = c(-0.14, 0.08), clip = \"off\") +\r\n  \r\n  #Change theme\r\n  theme_minimal() +\r\n  \r\n  #Move legend title to top\r\n  guides(color = guide_legend(title.position = \"top\")) +\r\n  \r\n  #Add custom theme\r\n  #Change legend position\r\n  theme(legend.position = \"top\",\r\n        \r\n        #Change width of legend\r\n        legend.key.width = unit(0.02, 'cm'),\r\n        \r\n        #Change text of legend\r\n        legend.text=element_text(size = 8),\r\n        \r\n        #Bold and change legend title\r\n        legend.title = element_text(face = \"bold\", size = 10),\r\n        \r\n        #Bold and change size of axes labels\r\n        axis.title = element_text(face = \"bold\", size = 11),\r\n        \r\n        #Change size of ticks\r\n        axis.text = element_text(size = 10),\r\n        \r\n        #Increase margins: theme_minimal()$plot.margin\r\n        #Top, right, bottom, left\r\n        plot.margin = unit(c(0.2, 0.8, 0.4, 0.4), \"cm\"))\r\n\r\n\r\n\r\n\r\nFigure 1. Biplot of the principal component analysis for macronutrients, energy, fiber, and minerals. All variables are scaled. Arrows (cyan) indicate the loading (eigenvalues) of variables for the first two principal components (PC), such that the length represents increasing variance in the direction of the PC. The text labels (black) represent the eigenvalue labels. Points represent individual observations belonging to specific food groups (colored), which are plotted along the first two PCs. The x-axis and y-axis show the proportion of variance explained by the first and second PC, respectively. Data source: USDA FoodData Central (Accessed 02/14/2022).\r\n\r\nFrom the PCA for minerals, we can observe the following patterns from the biplot (Figure 1):\r\nMost minerals are on the positive side of the first principal component (PC), whereas calories, fat, sugar, and carbohydrates are on the negative side. This indicates that the first PC may differentiate between macronutrients and micronutrients (minerals).\r\nFoods high in protein are on the positive side of the second PC, whereas all other nutrient variables are on the negative side. This indicates that the second PC may differentiate between foods categorized as animal or non-animal products.\r\nFoods with higher amounts of protein tend to have lower levels of sugar and fat, but higher levels of zinc and selenium mineral, and foods with higher calories or energy tend to have higher levels of carbohydrates. Fiber is not correlated with macronutrients or minerals, but most minerals such as calcium, magnesium, and copper are positively correlated with each other\r\nScree Plot\r\n\r\n\r\nCode\r\n\r\n#Standard deviation vector\r\nsd_vec <- food_pca$sdev\r\n\r\n#Variance vector\r\nvar_vec <- sd_vec^2\r\n\r\n#Vector of PC names\r\npc_names <- colnames(food_pca$rotation)\r\n\r\n#Percent explained df\r\npct_expl_df <- data.frame(v = var_vec,\r\n                          \r\n                          #Each value divided by sum of variance\r\n                          pct_v = var_vec/sum(var_vec),\r\n                          \r\n                          #Labels\r\n                          pc = fct_inorder(pc_names)) %>% \r\n  \r\n  mutate(pct_lbl = paste0(round(pct_v*100, 1), '%'))\r\n\r\n\r\n\r\n#Plot\r\nggplot(data = pct_expl_df, aes(x = pc, y = v)) +\r\n  \r\n  #Column\r\n  geom_col(fill = \"cyan4\") +\r\n  \r\n  #Add label\r\n  geom_text(aes(label = pct_lbl),\r\n            vjust = 0, nudge_y = 0.05) +\r\n  \r\n  #Change theme\r\n  theme_minimal() +\r\n  \r\n  #Change x-axis and y-axis labels\r\n  labs(x = \"Principal Component\",\r\n       y = \"Eigenvalue\") +\r\n  \r\n  #Add custom theme\r\n  #Bold and change size of axes labels\r\n  theme(axis.title = element_text(face = \"bold\", size = 11),\r\n        \r\n        #Change size of ticks\r\n        axis.text = element_text(size = 10))\r\n\r\n\r\n\r\n\r\nFigure 2. Scree plot for the principal component analysis exploring macronutrients, energy, fiber, and minerals for various food groups. The x-axis represents the specific principal component (PC) and the y-axis represents the eigenvalue. The black text above each bar in the plot represents the proportion of variance explained by that PC. Data source: USDA FoodData Central (Accessed 02/14/2022).\r\n\r\nLoadings\r\n\r\n\r\nCode\r\n\r\n#Loadings or rotations of first 4 PCs\r\nfood_pca_table <- as.data.frame(food_pca$rotation[,1:4])\r\n\r\n\r\n\r\n#Present as table\r\nfood_pca_table %>% \r\n\r\n  #Add table caption\r\n  kable(caption = \"Loadings or rotations for the first four principal components (PC) for the principal component analysis for macronutrients, energy, fiber, and minerals. Data source: USDA FoodData Central (Accessed 02/14/2022).\",\r\n        \r\n        #Round digits\r\n        digits = 2,\r\n        \r\n        #Align PCs to center\r\n        align = rep(\"c\", times = 5),\r\n        \r\n        #Change width of table\r\n        table.attr = \"style='width:70%;'\") %>% \r\n  \r\n  #kableExtra styling\r\n  #Not make table full width, hover rows\r\n  kable_styling(bootstrap_options = \"hover\") %>% \r\n  \r\n  #Bold row names\r\n  column_spec(1, bold = TRUE) %>% \r\n  \r\n  #Highlight specific cells for high negative and positive values\r\n  #Color text white if background is hightlighted\r\n\r\n  #PC1\r\n  column_spec(2, background = case_when(food_pca_table$PC1 <= -0.25 ~ \"firebrick\", \r\n                                        food_pca_table$PC1 >= 0.30 ~ \"darkgreen\",\r\n                                        TRUE ~ \" \"),\r\n              color = case_when(food_pca_table$PC1 <= -0.25 ~ \"white\", \r\n                                food_pca_table$PC1 >= 0.30 ~ \"white\",\r\n                                TRUE ~ \" \")) %>% \r\n  #PC2\r\n  column_spec(3, background = case_when(food_pca_table$PC2 <= -0.25 ~ \"firebrick\", \r\n                                        food_pca_table$PC2 >= 0.30 ~ \"darkgreen\",\r\n                                        TRUE ~ \" \"),\r\n              color = case_when(food_pca_table$PC2 <= -0.25 ~ \"white\", \r\n                                food_pca_table$PC2 >= 0.30 ~ \"white\",\r\n                                TRUE ~ \" \")) %>% \r\n  #PC3\r\n  column_spec(4, background = case_when(food_pca_table$PC3 <= -0.25 ~ \"firebrick\", \r\n                                        food_pca_table$PC3 >= 0.30 ~ \"darkgreen\",\r\n                                        TRUE ~ \" \"),\r\n              color = case_when(food_pca_table$PC3 <= -0.25 ~ \"white\", \r\n                                food_pca_table$PC3 >= 0.30 ~ \"white\",\r\n                                TRUE ~ \" \")) %>%\r\n\r\n  #PC4\r\n  column_spec(5, background = case_when(food_pca_table$PC4 <= -0.25 ~ \"firebrick\", \r\n                                        food_pca_table$PC4 >= 0.30 ~ \"darkgreen\",\r\n                                        TRUE ~ \" \"),\r\n              color = case_when(food_pca_table$PC4 <= -0.25 ~ \"white\", \r\n                                food_pca_table$PC4 >= 0.30 ~ \"white\",\r\n                                TRUE ~ \" \"))\r\n\r\n\r\n\r\nTable 1: Loadings or rotations for the first four principal components (PC) for the principal component analysis for macronutrients, energy, fiber, and minerals. Data source: USDA FoodData Central (Accessed 02/14/2022).\r\n\r\n\r\n\r\n\r\nPC1\r\n\r\n\r\nPC2\r\n\r\n\r\nPC3\r\n\r\n\r\nPC4\r\n\r\n\r\nenergy_kcal\r\n\r\n\r\n-0.05\r\n\r\n\r\n-0.25\r\n\r\n\r\n-0.65\r\n\r\n\r\n0.00\r\n\r\n\r\nprotein_g\r\n\r\n\r\n0.43\r\n\r\n\r\n0.20\r\n\r\n\r\n-0.07\r\n\r\n\r\n0.12\r\n\r\n\r\nfat_g\r\n\r\n\r\n-0.11\r\n\r\n\r\n-0.04\r\n\r\n\r\n-0.71\r\n\r\n\r\n-0.08\r\n\r\n\r\ncarb_g\r\n\r\n\r\n-0.10\r\n\r\n\r\n-0.52\r\n\r\n\r\n0.17\r\n\r\n\r\n0.08\r\n\r\n\r\nsugar_g\r\n\r\n\r\n-0.20\r\n\r\n\r\n-0.36\r\n\r\n\r\n0.11\r\n\r\n\r\n0.19\r\n\r\n\r\nfiber_g\r\n\r\n\r\n0.13\r\n\r\n\r\n-0.43\r\n\r\n\r\n0.11\r\n\r\n\r\n-0.14\r\n\r\n\r\ncalcium_mg\r\n\r\n\r\n0.13\r\n\r\n\r\n-0.13\r\n\r\n\r\n-0.07\r\n\r\n\r\n0.65\r\n\r\n\r\ncopper_mcg\r\n\r\n\r\n0.26\r\n\r\n\r\n-0.22\r\n\r\n\r\n0.00\r\n\r\n\r\n-0.38\r\n\r\n\r\niron_mg\r\n\r\n\r\n0.38\r\n\r\n\r\n-0.16\r\n\r\n\r\n0.00\r\n\r\n\r\n-0.21\r\n\r\n\r\nmagnesium_mg\r\n\r\n\r\n0.33\r\n\r\n\r\n-0.37\r\n\r\n\r\n0.00\r\n\r\n\r\n-0.02\r\n\r\n\r\nmanganese_mg\r\n\r\n\r\n0.07\r\n\r\n\r\n-0.08\r\n\r\n\r\n0.02\r\n\r\n\r\n-0.35\r\n\r\n\r\nphosphorus_mg\r\n\r\n\r\n0.41\r\n\r\n\r\n-0.09\r\n\r\n\r\n-0.05\r\n\r\n\r\n0.39\r\n\r\n\r\nselenium_mcg\r\n\r\n\r\n0.35\r\n\r\n\r\n0.24\r\n\r\n\r\n-0.03\r\n\r\n\r\n0.07\r\n\r\n\r\nzinc_mg\r\n\r\n\r\n0.31\r\n\r\n\r\n0.14\r\n\r\n\r\n-0.06\r\n\r\n\r\n-0.18\r\n\r\n\r\nThe first two PCs of the PCA that includes minerals explain about 41.6% of the variance (Figure 2), while the first four PCs explain about 64.05% variance.\r\nSimilar to what was shown in the biplot (Figure 1), the first PC has high positive loadings (\\(\\ge 0.30\\)) for protein and various minerals (Table 1), suggesting this PC may capture information about food groups that contain animal products such as beef and shellfish. The second PC has high negative loadings (\\(\\le -0.25\\)) for carbohydrates, sugars, and fibers, and this could mean this PC captures information about foods that contain grains or cereals. The third PC has high negative loadings for energy and fat, which possibly represents the food group for fats and oils. The fourth PC shows high positive loadings for calcium and phosphorous but high negative loadings for copper and manganese, suggesting that foods with high calcium and phosphorous tend to be foods with lower amounts of copper and manganese.\r\nVitamins\r\nPrincipal Component Analysis\r\nFor this PCA, I included the following variables:\r\nenergy or calories (kcal), fiber (g), sugar (g)\r\ncarbohydrate (g), protein (g), fat (g)\r\nvitamin A (mcg), vitamin B6 (mg), vitamin B12 (mcg), vitamin C (mg), vitamin E (mg), folate (mcg), niacin (mg), riboflavin (mg), thiamin (mg)\r\n\r\n\r\nCode\r\n\r\n########## Subset data for common vitamins ##########\r\n\r\nfood_vitamins <- food %>% \r\n  \r\n  #Select certain nutrients: calories, macros, and vitamins \r\n  select(food_group, short_descrip, energy_kcal:fiber_g,\r\n         vit_a_mcg:thiamin_mg) %>% \r\n  \r\n  #Drop missing values\r\n  drop_na() %>% \r\n  \r\n  #Filter food groups: fruits/veggies, grains/legumes, meats/dairy, fats\r\n  filter(food_group %in% c(\"Fruits and Fruit Juices\",\r\n                           \"Cereal Grains and Pasta\", \"Legumes and Legume Products\",\r\n                           \"Dairy and Egg Products\", \"Finfish and Shellfish Products\",\r\n                           \"Beef Products\", \"Sweets\", \"Fats and Oils\"))\r\n\r\n\r\n\r\n########## PCA ##########\r\n\r\nfood_pca2 <- food_vitamins %>% \r\n  \r\n  #Remove factors or strings\r\n  select(-c(food_group,short_descrip)) %>% \r\n  \r\n  #Scale numeric data\r\n  scale() %>% \r\n  \r\n  #Perform PCA\r\n  prcomp\r\n\r\n\r\n#Save loadings into dataframe\r\nloadings_df2 <- data.frame(food_pca2$rotation) %>%\r\n  mutate(axis = row.names(.))\r\n\r\n#Save components into new axis\r\nnew_pts_df2 <- data.frame(food_pca2$x)\r\n\r\n\r\n\r\n########## Biplot ##########\r\n\r\n#Autoplot using ggfortify\r\n#Use ggplot \r\nautoplot(food_pca2,\r\n         \r\n         #Associate df with PCA df\r\n         data = food_vitamins,\r\n         \r\n         #Show loadings\r\n         loadings = TRUE,\r\n         \r\n         #Color by food group\r\n         #Need UK spelling\r\n         colour = \"food_group\",\r\n         \r\n         #Show PC1 and PC2 label\r\n         loadings.label = TRUE,\r\n         \r\n         #Change color of PC arrows\r\n         loadings.colour = \"cyan2\",\r\n         \r\n         #Change label color\r\n         loadings.label.colour = \"black\",\r\n         \r\n         #Change position of labels\r\n         loadings.label.vjust = -1) +\r\n  \r\n  #Change legend title\r\n  labs(color = \"Food Group\") +\r\n  \r\n  #Change color of points\r\n  scale_color_brewer(type = \"qual\", palette = \"Set2\") +\r\n  \r\n  #Change theme\r\n  theme_minimal() +\r\n  \r\n  #Move legend title to top\r\n  guides(color = guide_legend(title.position = \"top\")) +\r\n  \r\n  #Add custom theme\r\n  #Change legend position\r\n  theme(legend.position = \"top\",\r\n        \r\n        #Change width of legend\r\n        legend.key.width = unit(0.02, 'cm'),\r\n        \r\n        #Change text of legend\r\n        legend.text=element_text(size = 8),\r\n        \r\n        #Bold and change legend title\r\n        legend.title = element_text(face = \"bold\", size = 10),\r\n        \r\n        #Bold and change size of axes labels\r\n        axis.title = element_text(face = \"bold\", size = 11),\r\n        \r\n        #Change size of ticks\r\n        axis.text = element_text(size = 10),\r\n        \r\n        #Increase margins: theme_minimal()$plot.margin\r\n        #Top, right, bottom, left\r\n        plot.margin = unit(c(0.2, 0.8, 0.4, 0.4), \"cm\"))\r\n\r\n\r\n\r\n\r\nFigure 3. Biplot of the principal component analysis for macronutrients, energy, fiber, and vitamins. All variables are scaled. Arrows (cyan) indicate the loading (eigenvalues) of variables for the first two principal components (PC), such that the length represents increasing variance in the direction of the PC. The text labels (black) represent the eigenvalue labels. Points represent individual observations belonging to specific food groups (colored), which are plotted along the first two PCs. The x-axis and y-axis show the proportion of variance explained by the first and second PC, respectively. Data source: USDA FoodData Central (Accessed 02/14/2022).\r\n\r\nFrom the PCA for vitamins, we can observe the following patterns from the biplot (Figure 3):\r\nMost vitamins are on the positive side of the first PC, whereas sugar and carbohydrates are on the negative side. This indicates that the first PC may differentiate between sweet foods and foods with more nutrients.\r\nFoods high in fat, vitamine E, and energy or calories are on the positive side of the second PC, whereas other macronutrients (sugar and carbohydrates) are on the negative side. This indicates that the second PC may differentiate between foods that are high in fat and oil versus other foods.\r\nThe bipolot shows three distinct groupings (foods high in fat, sugar and carbohydrates, and vitamins). Vitamins are generally all positively correlated with one another, and foods high in sugar tend to also be high in carbohydrates. Foods with high levels of fat and energy are positively correlated with foods with high levels of vitamin E. Foods high in vitamin C and fiber also tend to be positively correlated.\r\nScree Plot\r\n\r\n\r\nCode\r\n\r\n#Standard deviation vector\r\nsd_vec2 <- food_pca2$sdev\r\n\r\n#Variance vector\r\nvar_vec2 <- sd_vec2^2\r\n\r\n#Vector of PC names\r\npc_names2 <- colnames(food_pca2$rotation)\r\n\r\n#Percent explained df\r\npct_expl_df2 <- data.frame(v = var_vec2,\r\n                          \r\n                          #Each value divided by sum of variance\r\n                          pct_v = var_vec2/sum(var_vec2),\r\n                          \r\n                          #Labels\r\n                          pc = fct_inorder(pc_names2)) %>% \r\n  \r\n  mutate(pct_lbl = paste0(round(pct_v*100, 1), '%'))\r\n\r\n\r\n\r\n#Plot\r\nggplot(data = pct_expl_df2, aes(x = pc, y = v)) +\r\n  \r\n  #Column\r\n  geom_col(fill = \"cyan4\") +\r\n  \r\n  #Add label\r\n  geom_text(aes(label = pct_lbl),\r\n            vjust = 0, nudge_y = 0.05) +\r\n  \r\n  #Change theme\r\n  theme_minimal() +\r\n  \r\n  #Change x-axis and y-axis labels\r\n  labs(x = \"Principal Component\",\r\n       y = \"Eigenvalue\") +\r\n  \r\n  #Add custom theme\r\n  #Bold and change size of axes labels\r\n  theme(axis.title = element_text(face = \"bold\", size = 11),\r\n        \r\n        #Change size of ticks\r\n        axis.text = element_text(size = 10))\r\n\r\n\r\n\r\n\r\nFigure 4. Scree plot for the principal component analysis exploring macronutrients, energy, fiber, and vitamins for various food groups. The x-axis represents the specific principal component (PC) and the y-axis represents the eigenvalue. The black text above each bar in the plot represents the proportion of variance explained by that PC. Data source: USDA FoodData Central (Accessed 02/14/2022).\r\n\r\nLoadings\r\n\r\n\r\nCode\r\n\r\n#Loadings or rotations of first 5 PCs\r\nfood_pca2_table <- as.data.frame(food_pca2$rotation[,1:5])\r\n\r\n\r\n\r\n#Present as table\r\nfood_pca2_table %>% \r\n\r\n  #Add table caption\r\n  kable(caption = \"Loadings or rotations for the first four principal components (PC) for the principal component analysis for macronutrients, energy, fiber, and vitamins. Data source: USDA FoodData Central (Accessed 02/14/2022).\",\r\n        \r\n        #Round digits\r\n        digits = 2,\r\n        \r\n        #Align PCs to center\r\n        align = rep(\"c\", times = 5),\r\n        \r\n        #Change width of table\r\n        table.attr = \"style='width:80%;'\") %>% \r\n  \r\n  #kableExtra styling\r\n  #Not make table full width, hover rows\r\n  kable_styling(bootstrap_options = \"hover\") %>% \r\n  \r\n  #Bold row names\r\n  column_spec(1, bold = TRUE) %>% \r\n  \r\n  #Highlight specific cells for high negative and positive values\r\n  #Color text white if background is hightlighted\r\n\r\n  #PC1\r\n  column_spec(2, background = case_when(food_pca2_table$PC1 <= -0.25 ~ \"firebrick\", \r\n                                        food_pca2_table$PC1 >= 0.30 ~ \"darkgreen\",\r\n                                        TRUE ~ \" \"),\r\n              color = case_when(food_pca2_table$PC1 <= -0.25 ~ \"white\", \r\n                                food_pca2_table$PC1 >= 0.30 ~ \"white\",\r\n                                TRUE ~ \" \")) %>% \r\n  #PC2\r\n  column_spec(3, background = case_when(food_pca2_table$PC2 <= -0.25 ~ \"firebrick\", \r\n                                        food_pca2_table$PC2 >= 0.30 ~ \"darkgreen\",\r\n                                        TRUE ~ \" \"),\r\n              color = case_when(food_pca2_table$PC2 <= -0.25 ~ \"white\", \r\n                                food_pca2_table$PC2 >= 0.30 ~ \"white\",\r\n                                TRUE ~ \" \")) %>% \r\n  #PC3\r\n  column_spec(4, background = case_when(food_pca2_table$PC3 <= -0.25 ~ \"firebrick\", \r\n                                        food_pca2_table$PC3 >= 0.30 ~ \"darkgreen\",\r\n                                        TRUE ~ \" \"),\r\n              color = case_when(food_pca2_table$PC3 <= -0.25 ~ \"white\", \r\n                                food_pca2_table$PC3 >= 0.30 ~ \"white\",\r\n                                TRUE ~ \" \")) %>%\r\n  #PC4\r\n  column_spec(5, background = case_when(food_pca2_table$PC4 <= -0.25 ~ \"firebrick\", \r\n                                        food_pca2_table$PC4 >= 0.30 ~ \"darkgreen\",\r\n                                        TRUE ~ \" \"),\r\n              color = case_when(food_pca2_table$PC4 <= -0.25 ~ \"white\", \r\n                                food_pca2_table$PC4 >= 0.30 ~ \"white\",\r\n                                TRUE ~ \" \")) %>% \r\n  \r\n  #PC5\r\n  column_spec(6, background = case_when(food_pca2_table$PC5 <= -0.25 ~ \"firebrick\", \r\n                                        food_pca2_table$PC5 >= 0.30 ~ \"darkgreen\",\r\n                                        TRUE ~ \" \"),\r\n              color = case_when(food_pca2_table$PC5 <= -0.25 ~ \"white\", \r\n                                food_pca2_table$PC5 >= 0.30 ~ \"white\",\r\n                                TRUE ~ \" \"))\r\n\r\n\r\n\r\nTable 2: Loadings or rotations for the first four principal components (PC) for the principal component analysis for macronutrients, energy, fiber, and vitamins. Data source: USDA FoodData Central (Accessed 02/14/2022).\r\n\r\n\r\n\r\n\r\nPC1\r\n\r\n\r\nPC2\r\n\r\n\r\nPC3\r\n\r\n\r\nPC4\r\n\r\n\r\nPC5\r\n\r\n\r\nenergy_kcal\r\n\r\n\r\n-0.15\r\n\r\n\r\n0.56\r\n\r\n\r\n0.24\r\n\r\n\r\n0.00\r\n\r\n\r\n-0.12\r\n\r\n\r\nprotein_g\r\n\r\n\r\n0.43\r\n\r\n\r\n0.03\r\n\r\n\r\n0.02\r\n\r\n\r\n0.18\r\n\r\n\r\n-0.15\r\n\r\n\r\nfat_g\r\n\r\n\r\n-0.12\r\n\r\n\r\n0.63\r\n\r\n\r\n-0.02\r\n\r\n\r\n0.04\r\n\r\n\r\n0.02\r\n\r\n\r\ncarb_g\r\n\r\n\r\n-0.27\r\n\r\n\r\n-0.17\r\n\r\n\r\n0.49\r\n\r\n\r\n-0.14\r\n\r\n\r\n-0.17\r\n\r\n\r\nsugar_g\r\n\r\n\r\n-0.28\r\n\r\n\r\n-0.10\r\n\r\n\r\n0.25\r\n\r\n\r\n-0.29\r\n\r\n\r\n-0.39\r\n\r\n\r\nfiber_g\r\n\r\n\r\n-0.05\r\n\r\n\r\n-0.10\r\n\r\n\r\n0.47\r\n\r\n\r\n0.16\r\n\r\n\r\n0.21\r\n\r\n\r\nvit_a_mcg\r\n\r\n\r\n0.14\r\n\r\n\r\n0.12\r\n\r\n\r\n0.07\r\n\r\n\r\n-0.59\r\n\r\n\r\n0.20\r\n\r\n\r\nvit_b6_mg\r\n\r\n\r\n0.40\r\n\r\n\r\n0.07\r\n\r\n\r\n0.12\r\n\r\n\r\n0.20\r\n\r\n\r\n-0.13\r\n\r\n\r\nvit_b12_mcg\r\n\r\n\r\n0.33\r\n\r\n\r\n0.07\r\n\r\n\r\n0.00\r\n\r\n\r\n-0.51\r\n\r\n\r\n0.05\r\n\r\n\r\nvit_c_mg\r\n\r\n\r\n-0.04\r\n\r\n\r\n-0.07\r\n\r\n\r\n-0.02\r\n\r\n\r\n-0.05\r\n\r\n\r\n0.75\r\n\r\n\r\nvit_e_mg\r\n\r\n\r\n-0.08\r\n\r\n\r\n0.46\r\n\r\n\r\n0.04\r\n\r\n\r\n0.07\r\n\r\n\r\n0.15\r\n\r\n\r\nfolate_mcg\r\n\r\n\r\n0.09\r\n\r\n\r\n-0.03\r\n\r\n\r\n0.49\r\n\r\n\r\n0.14\r\n\r\n\r\n0.24\r\n\r\n\r\nniacin_mg\r\n\r\n\r\n0.43\r\n\r\n\r\n0.06\r\n\r\n\r\n0.13\r\n\r\n\r\n0.16\r\n\r\n\r\n-0.14\r\n\r\n\r\nriboflavin_mg\r\n\r\n\r\n0.33\r\n\r\n\r\n0.04\r\n\r\n\r\n0.18\r\n\r\n\r\n-0.34\r\n\r\n\r\n-0.07\r\n\r\n\r\nthiamin_mg\r\n\r\n\r\n0.13\r\n\r\n\r\n-0.01\r\n\r\n\r\n0.31\r\n\r\n\r\n0.15\r\n\r\n\r\n0.13\r\n\r\n\r\nThe first two PCs of the PCA that includes vitamins explain about 35.82% of the variance (Figure 4), while the first five PCs explain about 66.34% variance.\r\nComplementing what was shown in the biplot (Figure 3), the first PC has high positive loadings (\\(\\ge 0.30\\)) for protein and various vitamins (Table 2) but high negative loadings for sugar and carbohydrates (\\(\\le -0.25\\)), suggesting this PC may capture information about food groups that contain animal products such as beef and shellfish. The second PC has high positive loadings for energy, fat, and vitamin E, which represents the food group for fats and oils. The third PC has high positive loadings for carbohydrates, fiber, and some vitamins, which possibly represents the food group for cereals and grains. The fourth PC shows high negative loadings for sugar and vitamins A and B12 as well as riboflavin, suggesting that foods with high additive sugars. Finally, the fifth PC has high negative loading for sugar and high positive loading for vitamin C, indicating that this PC may carry information about fruits and fruit juices which may be sweet but have high levels of vitamin C.\r\nSummary\r\nIn conclusion, PCA allows us to reduce the high-dimensional dataset to visually explore correlations between variables and whether there are certain clusters of observations. From the PCA on minerals and vitamins on a selection of food groups, we found that:\r\nEven after scaling, macronutrients and micronutrients can be distinguished using biplots, and food groups can be categorized into 1) high energy and high fat, 2) high sugar and high carbohydrate, or 3) high nutrient content (vitamins or minerals)\r\nObservations that belong in similar food groups (e.g., beef products and shellfish) have similar levels of vitamins, minerals, calories, and nutrients\r\nFor both the mineral and vitamin PCA, the biplots and scree plots reveal that the first two PCs explain less than 90% of the variance in the dataset; future observations should combine both variables in the dataset and perform PCA on one, large high-dimensional dataset\r\nReferences\r\nData and Literature\r\nNational Institute of Health (NIH) National Institute on Aging (NIA). Know Your Food Groups. https://www.nia.nih.gov/health/know-your-food-groups. Content reviewed: April 29, 2019. Accessed 02/18/2022.\r\nUnited States Department of Agriculture (USDA). FoodData Central. https://fdc.nal.usda.gov/download-datasets.html. Accessed 02/14/2022.\r\nUnited States Department of Agriculture (USDA) Food and Nutrition Information Center. National Agricultural Library. https://www.nal.usda.gov/legacy/fnic/food-composition. Accessed 02/18/2022.\r\nR Libraries\r\nFirke, S. (2021). janitor: Simple Tools for Examining and Cleaning Dirty Data. R package version 2.1.0. https://CRAN.R-project.org/package=janitor.\r\nHorikoshi, M. & Tang, Y. (2016). ggfortify: Data Visualization Tools for Statistical Analysis Results. https://CRAN.R-project.org/package=ggfortify.\r\nMüller, K. (2020). here: A Simpler Way to Find Your Files. R package version 1.0.1. https://CRAN.R-project.org/package=here.\r\nNeuwirth, E. (2014). RColorBrewer: ColorBrewer Palettes. R package version 1.1-2. https://CRAN.R-project.org/package=RColorBrewer.\r\nWickham et al., (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686, https://doi.org/10.21105/joss.01686.\r\nZhu, H. (2021). kableExtra: Construct Complex Table with ‘kable’ and Pipe Syntax. R package version 1.3.4. https://CRAN.R-project.org/package=kableExtra.\r\n\r\n\r\n\r\n",
    "preview": "portfolio/pca_usda_food/pca_usda_food_files/figure-html5/unnamed-chunk-1-1.png",
    "last_modified": "2022-03-18T20:47:10-07:00",
    "input_file": {}
  },
  {
    "path": "portfolio/logistic_regression_palmettos/",
    "title": "Binary Logistic Regression: Classifying Florida Palmetto Species",
    "description": "In this project, I explored Florida palmetto data through exploratory visualizations and used binary logistic regression to classify palmetto species.",
    "author": [
      {
        "name": "Shuying Yu",
        "url": {}
      }
    ],
    "date": "2022-02-11",
    "categories": [
      "Logistic Regression",
      "R"
    ],
    "contents": "\r\n\r\nContents\r\nIntroduction\r\nResearch Question\r\nData and Methods\r\nResults\r\nExploratory Data Visualizations\r\nBinary Logistic Regression Model\r\nModel Comparison Using AIC\r\nFinal Model Selection\r\nClassification Accuracy of Final Model\r\n\r\nSummary\r\nReferences\r\nData and Literature\r\nR Libraries\r\n\r\n\r\n\r\n\r\nCode\r\n\r\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE,\r\n                      fig.align = \"center\")\r\n\r\n#Attach libraries\r\nlibrary(tidyverse)\r\nlibrary(here)\r\nlibrary(broom)\r\nlibrary(AICcmodavg)\r\nlibrary(kableExtra)\r\nlibrary(ggtext)\r\nlibrary(patchwork)\r\n\r\n\r\n\r\nIntroduction\r\nIn this project, I used binary logistic regression to classify Florida palmetto species as either Serenoa repens or Sabal etonia using physical measurements of the plants. Exploratory data analysis was performed and two logistic regression models were built. Accuracy was used as a metric for which model was better in classifying palmetto species.\r\nResearch Question\r\nCan we correctly classify whether a palemtto species is either Serenoa repens or Sabal etonia? For binary logistic regression, we want to investigate whether the model can classify whether a palmetto belongs to species Serenoa repens or Sabal etonia using the variables plant height (cm), canopy length (cm), canopy width (cm), and number of green leaves. In other words, we want to investigate whether the model can significantly predict our outcome variable, palmetto species.\r\nNull hypothesis (\\(H_0\\)): The model does not significantly predict the log odds of species being equal to Serenoa repens. The \\(\\beta_j\\) coefficients are equal to zero for each \\(j\\text{th}\\) predictor variable.\r\nAlternative hypothesis (\\(H_1\\)): At least one of the predictors or explanatory variables significantly predicts the log odds of species being equal to Serenoa repens. At least one of the \\(\\beta_j\\) coefficients in the model is not equal to zero.\r\nData and Methods\r\nPalmetto plant species Serenoa repens and Sabal etonia were observed from the years 1981 - 2017 at the Archbold Biological Station in south-central Florida and made publicly available by Dr. Warren Abrahamson (Abrahamson, 2019). Seedlings were planted and survival, growth, and biomass of the two species of plants were measured. Maximum height (cm), widest length of the canopy (cm), widest width of the canopy (cm), and the number of green leaves were among the physical measurements of plant growth that were recorded.\r\nFollowing exploratory data visualizations, the relationship between species and other recorded measurements were investigated by binary logistic regression. 10-fold cross-validation was performed, and accuracy and AIC were used as metrics to compare two different models and choose the model with better performance. Sample size and proportion of species correctly classified by the final model are reported. All analyses were conducted in R version 4.1.1 and RStudio version 1.4.1717.\r\nResults\r\nExploratory Data Visualizations\r\n\r\n\r\nCode\r\n\r\n#Read in the data \r\npalmetto <- read_csv(here(\"_portfolio\", \"data\", \"palmetto.csv\"))\r\n\r\n\r\n#Clean the data\r\npalmetto <- palmetto %>% \r\n  \r\n  #Select relevant variables\r\n  select(height:green_lvs, species) %>% \r\n  \r\n  #Recode species vairable\r\n  #1 = Serenoa repens, 2 = Sabal etonia\r\n  mutate(species = case_when(species == 1 ~ \"Serenoa repens\",\r\n                             species == 2 ~ \"Sabal etonia\")) %>% \r\n  \r\n  #Change species as factor\r\n  mutate(species = as.factor(species)) %>% \r\n  \r\n  #Reame variables to add units\r\n  rename(height_cm = height,\r\n         length_cm = length,\r\n         width_cm = width,\r\n         green_leaves = green_lvs)\r\n\r\n\r\n\r\n\r\n\r\nCode\r\n\r\n### Plot 1: height and length marginal distributions\r\n\r\n#Define color palette\r\npalmetto_colors <- c(\"slateblue1\", \"skyblue1\") \r\n\r\n#Create scatterplot and marginal distributions\r\nggplot(data = palmetto, \r\n       aes(x = length_cm, y = height_cm, \r\n           color = species)) +\r\n  \r\n  #Define scatter\r\n  geom_point(alpha = 0.50, size = 2) + \r\n  \r\n  #Change colors\r\n  scale_colour_manual(values = palmetto_colors) +\r\n  \r\n  #Change theme\r\n  theme_minimal() +\r\n  \r\n  #Change x-axis and y-axis labels\r\n  #Change legend title\r\n  labs(x = \"Canopy Length (cm)\",\r\n       y = \"Height (cm)\",\r\n       color = \"Species\") +\r\n  \r\n  #Change legend position\r\n  theme(legend.position = c(0.8, 0.15),\r\n        \r\n        #Bold title of legend\r\n        legend.title = element_text(face = \"bold\"),\r\n        \r\n        #Bold x-axis and y-axis label text, change size\r\n        axis.title = element_text(face = \"bold\", size = 11))\r\n\r\n\r\n\r\n\r\nFigure 1. Canopy length (cm) plotted by plant height (cm) for each individual palmetto plant species, Sabal etonia (purple points) and Serenoa repens (blue points). Data source: Abrahamson, 2019.\r\n\r\n\r\n\r\nCode\r\n\r\n### Plot 2: Histogram of leaves by species\r\n\r\n#Get mean of leaves by species\r\npalmetto_leaves <-  palmetto %>% \r\n  select(species, green_leaves) %>% \r\n  group_by(species) %>% \r\n  summarize(avg_leaves = mean(green_leaves, na.rm = TRUE))\r\n\r\n\r\n#Bar plot\r\nggplot(data = palmetto, aes(x = green_leaves,\r\n                            fill = species)) +\r\n  \r\n  #Define histogram\r\n  #Fill with same colors and allow overlap\r\n  geom_histogram(alpha = 0.60, position = \"dodge\") +\r\n  \r\n  #Change colors\r\n  scale_color_manual(values = palmetto_colors) +\r\n  scale_fill_manual(values = palmetto_colors) +\r\n  \r\n  #Change theme\r\n  theme_minimal() +\r\n  \r\n  #Change x-axis and y-axis labels\r\n  labs(x = \"Number of Green Leaves\",\r\n       y = \"Count\",\r\n       fill = \"Species\") +\r\n  \r\n  #Change legend position inside plot\r\n  theme(legend.position = c(.80, .80),\r\n        \r\n        #Bold title\r\n        legend.title = element_text(face = \"bold\"),\r\n        \r\n        #Bold x-axis and y-axis label text, change size\r\n        axis.title = element_text(face = \"bold\", size = 11))\r\n\r\n\r\n\r\n\r\nFigure 2. Histogram plots show the frequency of the number of green leaves counted per plant for each palmetto plant species, Sabal etonia (purple bars) and Serenoa repens (blue bars). Data source: Abrahamson, 2019.\r\n\r\n\r\n\r\nCode\r\n\r\n### Plot 3: Check width of species\r\n\r\n#Beeswaram boxplot\r\nggplot(data = palmetto, aes(x = species,\r\n                            y = width_cm,\r\n                            fill = species)) +\r\n  \r\n  #Define violin plot\r\n  #Change color fill to species, remove legend\r\n  geom_violin(alpha = 0.5, show.legend = FALSE) +\r\n\r\n  \r\n  #Add median point, change size and color\r\n  #Remove legend\r\n  stat_summary(fun = median, geom = \"point\", \r\n               size = 3, color = \"black\",\r\n               show.legend = FALSE) +\r\n  \r\n  #Change x-axis and y-axis labels\r\n  labs(x = \"Palmetto Species \\n\",\r\n       y = \"Canopy Width (cm) \\n\") +\r\n  \r\n  #Use color palette to fill boxplot\r\n  scale_fill_manual(values = palmetto_colors) +\r\n  \r\n  #Use color palette to fill jitter points\r\n  scale_color_manual(values = palmetto_colors) +\r\n\r\n  #Change theme\r\n  theme_classic() +\r\n  \r\n  #Add break in species names\r\n  scale_x_discrete(labels = c(\"Sabal etonia\", \"Serenoa repens\")) +\r\n  \r\n  #Italicize latin names for species\r\n  theme(axis.text.x = element_text(face = \"italic\", size = 11),\r\n        \r\n        #Bold x-axis and y-axis label text, change size\r\n        axis.title = element_text(face = \"bold\", size = 11))\r\n\r\n\r\n\r\n\r\nFigure 3. Violin plots for the distribution of canopy width (cm) for each palmetto species, Sabal etonia (purple) and Serenoa repens (blue). The violin plot outlines illustrate the kernel probability density such that the width of the shaded area represents the proportion of the data located there. The black point within the violin plot indicates the median width for each species. Data source: Abrahamson, 2019.\r\n\r\nInitial exploration of the data reveals certain physical traits between the two palmetto species. Height between the two species appear similar, but the Serenoa repens plant species seem to have shorter canopy length (Figure 1). There is also a difference in the number of green leaves measured, with Serenoa repens plants having larger range and variance with an average of 7.5 green leaves counted (Figure 2). The majority of Sabal etonia plants have on average 4.02 green leaves, and the variance appears smaller. For the final exploratory plot, the canopy width was examined between the species and their respective width distribution and median width appear to be similar (Figure 3). Based on these plots, plant height and number of green leaves are the most likely to be helpful in classifying palmetto species correctly.\r\nBinary Logistic Regression Model\r\nWe will build two binary logistic regression models to determine the probability of a plant being either Serenoa repens or Sabal etonia based on several predictor variables.\r\nModel 1: Log odds of palmetto species being Serenoa repens using plant height, canopy length, canopy width, and number of green leaves as predictor variables\r\nModel 2: Log odds of palmetto species being Serenoa repens using plant height, canopy width, and number of green leaves as predictor variables\r\n\r\n\r\n\r\nCode\r\n\r\n########## Build the models ##########\r\n\r\n### Model 1\r\n\r\n#Define model with formula\r\nfx1 <- species ~ height_cm + length_cm + width_cm + green_leaves\r\n\r\n#Create model\r\n#Sabal etonia is reference\r\nmod1 <- glm(formula = fx1, data = palmetto,\r\n            family = \"binomial\")\r\n\r\n\r\n### Model 2\r\n\r\n#Define model with formula\r\nfx2 <- species ~ height_cm + width_cm + green_leaves\r\n\r\n#Create model\r\n#Sabal etonia is reference\r\nmod2 <- glm(formula = fx2, data = palmetto,\r\n            family = \"binomial\")\r\n\r\n\r\n\r\n########## K-fold cross-validation ##########\r\n\r\n### Define parameters\r\n\r\n#Set seed\r\nset.seed(244)\r\n\r\n#10 fold, k=10\r\nn_folds <- 10\r\n\r\n#Create vector whose length is same as number of rows in our df\r\nfold_vec <- rep(1:n_folds, length.out = nrow(palmetto))\r\n\r\n#Randomize\r\n#Assign new column the number from fold_vec (repeats of 1-10)\r\n#Each group of 10 gets assigned a number 1-10, to divide folds into 10\r\npalmetto_fold <- palmetto %>% \r\n  mutate(fold = sample(fold_vec, size = n()))\r\n\r\n\r\n### Prediction accuracy function\r\n\r\npred_acc <- function(x, y) {\r\n  accurate <- ifelse(x == y, 1, 0)\r\n  return(mean(accurate, na.rm = TRUE))\r\n}\r\n\r\n\r\n### Run cross-validation\r\n\r\n#Create empty dataframe \r\nresults_df <- data.frame()\r\n\r\n#Loop 10 folds for cross-validation\r\nfor(i in 1:n_folds){\r\n  \r\n  \r\n  #Create test and training sets\r\n  #90/10, train/test\r\n  kfold_test_df <- palmetto_fold %>% \r\n    filter(fold_vec == i)\r\n  kfold_train_df <- palmetto_fold %>% \r\n    filter(fold_vec != i)\r\n  \r\n  \r\n  #Train the 2 models on training set\r\n  kfold_model1 <- glm(formula = fx1, data = kfold_train_df,\r\n                      family = \"binomial\")\r\n  kfold_model2 <- glm(formula = fx2, data = kfold_train_df,\r\n                      family = \"binomial\")\r\n  \r\n  \r\n  #Test df\r\n  #Based on new model, use that to predict whether it is S.repens or not\r\n  kfold_pred <- kfold_test_df %>% \r\n    mutate(blr1 = predict(kfold_model1,\r\n                          kfold_test_df,\r\n                          type = \"response\"),\r\n           blr2 = predict(kfold_model2,\r\n                          kfold_test_df,\r\n                          type = \"response\")) %>% \r\n    \r\n    #Add a new column for predicted sepecies\r\n    mutate(pred1 = ifelse(blr1 > 0.50,\r\n                          \"Serenoa repens\", \"Sabal etonia\"),\r\n           pred2 = ifelse(blr2 > 0.50,\r\n                          \"Serenoa repens\", \"Sabal etonia\"))\r\n  \r\n  #Accuracy between true species and predicted species\r\n  #Use predict accuracy function\r\n  kfold_accuracy <- kfold_pred %>% \r\n    summarize(blr1_acc = pred_acc(species, pred1),\r\n              blr2_acc = pred_acc(species, pred2))\r\n  \r\n  #Combine accuracy to results df\r\n  results_df <- bind_rows(results_df,\r\n                          kfold_accuracy)\r\n  \r\n}\r\n\r\n########## Check mean accuracy of each model ##########\r\n\r\n#Mean accuracy\r\nacc_table <- results_df %>%\r\n  \r\n  #Get mean of accuracy\r\n  summarize(blr1_acc = mean(blr1_acc),\r\n            blr2_acc = mean(blr2_acc)) \r\n\r\n#Add row name\r\nrownames(acc_table) <- c(\"Mean Prediction Accuracy\")\r\n\r\n#Style in kable\r\nacc_table %>% \r\n  \r\n  #Change column names\r\n  kable(col.names = c(\"Model 1\", \"Model 2\"), \r\n        \r\n        caption = \"Average prediction accuracy of \r\n        palmetto species for Model 1 and Model 2 from 10-fold \r\n        cross-validation. Model 1 includes all predictors \r\n        (plant height, canopy width, canopy length, and \r\n        number of green leaves) while Model 2 excludes \r\n        canopy length from the model. \r\n        Data source: Abrahamson, 2019.\",\r\n  \r\n        #Align all cells/columns to center\r\n        align = c(rep(\"c\", times = 3)),\r\n        \r\n        #Round digits to 2\r\n        digits = 2,\r\n        \r\n        #Change width of table\r\n        table.attr = \"style='width:60%;'\") %>% \r\n\r\n   kable_styling(full_width = TRUE,\r\n                 position = \"center\")\r\n\r\n\r\n\r\nTable 1: Average prediction accuracy of palmetto species for Model 1 and Model 2 from 10-fold cross-validation. Model 1 includes all predictors (plant height, canopy width, canopy length, and number of green leaves) while Model 2 excludes canopy length from the model. Data source: Abrahamson, 2019.\r\n\r\n\r\n\r\n\r\nModel 1\r\n\r\n\r\nModel 2\r\n\r\n\r\nMean Prediction Accuracy\r\n\r\n\r\n0.91\r\n\r\n\r\n0.89\r\n\r\n\r\nWe perform k-fold cross-validation with \\(k = 10\\) folds for each model. Model 1 with all the predictors in the model has a higher mean accuracy (91.04%) in classifying palmetto species than Model 2 (89.31%) (Table 1).\r\nModel Comparison Using AIC\r\nWe can use the Akaike information criterion (AIC) as an additional metric to compare the fit of our binary logistic regression models. AIC is calculated as:\r\n\\[\\text{AIC}=2K−2ln(L)\\]\r\nwhere K is the number of model parameters (default is 2), and \\(ln(L)\\) is the log-likelihood of the model. The log-likelihood tells us how likely the model is given the data we use.\r\n\r\n\r\n\r\nCode\r\n\r\n########## AICc ##########\r\n\r\n#Compare AIC of model 1 and model 2\r\naic <- AIC(mod1, mod2)\r\n\r\n#Allows to compare 2 model values at once here\r\n#Gives K, delta AICc... lists best model first\r\naictable <- AICcmodavg::aictab(list(mod1, mod2))\r\n\r\n#Rename model names in column\r\naictable$Modnames <- c(\"Model 1\", \"Model 2\")\r\n\r\n########## Create finalized table ##########\r\n\r\naictable %>% \r\n  \r\n  #Use kable to make nice format\r\n  kable(col.names = c(\"Model Name\", \"*K*\",\r\n        \"AIC (corrected)\", \"Change in AIC (corrected)\", \r\n        \"Model Likelihood\", \"AIC (corrected) Weight\", \r\n        \"Log-Likelihood\", \"Cumulative Weight\"),\r\n        \r\n        #Add caption\r\n        caption = \"Statistics for the AIC table \r\n        between Model 1 and Model 2, which includes the \r\n        number of parameters in the model, the corrected AIC \r\n        value, the difference in AIC value between the best \r\n        model compared to the current model, proportion of \r\n        total predictive power found in the model (%), the \r\n        log-likelihood of the model, and finally the cumulative \r\n        sum of the AIC weights. Data source: Abrahamson, 2019.\",\r\n        \r\n        #Align all cells/columns to center\r\n        align = c(rep(\"c\", times = 8)),\r\n        \r\n        #Round digits to 2\r\n        digits = 2) %>% \r\n  \r\n  #Make full width\r\n  kable_styling(full_width = TRUE, position = \"center\") \r\n\r\n\r\n\r\nTable 2: Statistics for the AIC table between Model 1 and Model 2, which includes the number of parameters in the model, the corrected AIC value, the difference in AIC value between the best model compared to the current model, proportion of total predictive power found in the model (%), the log-likelihood of the model, and finally the cumulative sum of the AIC weights. Data source: Abrahamson, 2019.\r\n\r\n\r\nModel Name\r\n\r\n\r\nK\r\n\r\n\r\nAIC (corrected)\r\n\r\n\r\nChange in AIC (corrected)\r\n\r\n\r\nModel Likelihood\r\n\r\n\r\nAIC (corrected) Weight\r\n\r\n\r\nLog-Likelihood\r\n\r\n\r\nCumulative Weight\r\n\r\n\r\nModel 1\r\n\r\n\r\n5\r\n\r\n\r\n5194.57\r\n\r\n\r\n0.00\r\n\r\n\r\n1\r\n\r\n\r\n1\r\n\r\n\r\n-2592.28\r\n\r\n\r\n1\r\n\r\n\r\nModel 2\r\n\r\n\r\n4\r\n\r\n\r\n5987.48\r\n\r\n\r\n792.91\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n-2989.74\r\n\r\n\r\n1\r\n\r\n\r\nWe used AIC model selection to distinguish among two possible models describing the relationship between the log odds of palmetto species being Serenoa repens using plant height, canopy length, canopy width, and number of green leaves as predictor variables. Here, Model 1 (K: 5, AIC: 5194.57) has a lower AIC value than Model 2 (K: 4, AIC: 5987.48) (Table 2). Thus, the better fitting model is Model 1, carrying majority of the cumulative model weight, and includes all the covariates with no interaction effects. The \\(\\Delta\\)AIC is 792.91, which is the difference in AIC score between the model being compared (Model 2) and the better performing model (Model 1).\r\nThus, according to our mean prediction accuracy and AIC measures, Model 1 with all four predictor variables is the better model. We will select this as the final model and train the model on the entire dataset.\r\nFinal Model Selection\r\n\r\n\r\nCode\r\n\r\n#Final model using all predictors\r\nblr_final <- glm(species ~ ., \r\n                 data = palmetto, \r\n                 family = \"binomial\")\r\n\r\n#Make into tidy format\r\nblr_final_tidy <- broom::tidy(blr_final)\r\n\r\n#Change row term names for kable\r\nblr_final_tidy_kable <- blr_final_tidy\r\nblr_final_tidy_kable$term <- c(\"(Intercept)\", \"Height (cm)\",\r\n                               \"Length (cm)\", \"Width (cm)\", \"Green Leaves\")\r\n\r\n#Change p-value so it writes \"< 0.001\" in kableExtra table\r\nblr_final_tidy_kable$p.value <- ifelse(blr_final_tidy_kable$p.value < 0.001,\r\n                                       paste(\"< 0.001\"),\r\n                                       paste(\"=\", blr_final_tidy_kable$p.value))\r\n\r\n\r\n#Use kableExtra to format into nice table\r\nblr_final_tidy_kable %>% \r\n  \r\n  #Change column and row names\r\n  kable(col.names = c(\"Predictor Variable\", \"Coefficient\",\r\n                      \"Standard Error\", \"*Z*-value\", \"*p*-value\"),\r\n        #Add caption\r\n        caption = \"Binary logistic regression results \r\n        for the log odds of palmetto species being \r\n        *Serenoa repens*. The four predictor variables \r\n        plant height (cm), canopy length (cm), canopy width \r\n        (cm), and number of green leaves are shown on the \r\n        left column and model summary statistics are on the \r\n        right columnns, reporting the $\\\\beta$ coefficients, \r\n        standard errors, *Z*-values, and *p*-values. \r\n        Data source: Abrahamson, 2019.\",\r\n        \r\n        #Align all cells/columns to center\r\n        align = c(rep(\"c\", times = 5)),\r\n        \r\n        #Round digits to 2\r\n        digits = 2) %>%\r\n  \r\n  #Make full width and add hover to rows\r\n  kable_styling(full_width = TRUE,\r\n                position = \"center\",\r\n                bootstrap_options = \"hover\")\r\n\r\n\r\n\r\nTable 3: Binary logistic regression results for the log odds of palmetto species being Serenoa repens. The four predictor variables plant height (cm), canopy length (cm), canopy width (cm), and number of green leaves are shown on the left column and model summary statistics are on the right columnns, reporting the \\(\\beta\\) coefficients, standard errors, Z-values, and p-values. Data source: Abrahamson, 2019.\r\n\r\n\r\nPredictor Variable\r\n\r\n\r\nCoefficient\r\n\r\n\r\nStandard Error\r\n\r\n\r\nZ-value\r\n\r\n\r\np-value\r\n\r\n\r\n(Intercept)\r\n\r\n\r\n-3.23\r\n\r\n\r\n0.14\r\n\r\n\r\n-22.71\r\n\r\n\r\n< 0.001\r\n\r\n\r\nHeight (cm)\r\n\r\n\r\n0.03\r\n\r\n\r\n0.00\r\n\r\n\r\n12.67\r\n\r\n\r\n< 0.001\r\n\r\n\r\nLength (cm)\r\n\r\n\r\n-0.05\r\n\r\n\r\n0.00\r\n\r\n\r\n-24.56\r\n\r\n\r\n< 0.001\r\n\r\n\r\nWidth (cm)\r\n\r\n\r\n-0.04\r\n\r\n\r\n0.00\r\n\r\n\r\n-18.78\r\n\r\n\r\n< 0.001\r\n\r\n\r\nGreen Leaves\r\n\r\n\r\n1.91\r\n\r\n\r\n0.04\r\n\r\n\r\n49.11\r\n\r\n\r\n< 0.001\r\n\r\n\r\nThe better performing and final model reveals that all \\(\\beta\\) coefficients are statistically significant (p < 0.001) (Table 3.). Thus, we would reject the null hypothesis that \\(\\beta_j\\) coefficients are equal to zero for each \\(j\\text{th}\\) predictor variable. The final model is written as:\r\n\\[\\small\r\n\\begin{aligned}\r\nln \\biggl( \\frac{P(\\widehat{\\text{species} = \\mathit{Serenoa \\ repens}})}{1 - P(\\widehat{\\text{species} = \\mathit{Serenoa \\ repens}})} \\biggr) = -3.23 + 0.03(\\text{Height}) - 0.05(\\text{Length}) - 0.04(\\text{Width}) + 1.91(\\operatorname{Green \\ Leaves})\r\n\\end{aligned}\\]\r\n\r\n\r\nCode\r\n\r\n########## Fit model to make predictions ##########\r\n\r\n##Take log odds and convert to probability\r\n#Get predicted probabilities of each plant being classified as Serenoa repens\r\nblr_fitted <- blr_final %>% \r\n  broom::augment(type.predict = \"response\") \r\n\r\n\r\n#Add column for what species the model predicted\r\nblr_fitted <- blr_fitted %>%\r\n  \r\n  #Create new column for predicted species\r\n  #Lower probability = Sabal etonia (< 50%)\r\n  #Higher probability = Serenoa repens (>= 50%)\r\n  mutate(species_predicted = case_when(.fitted >= 0.50 ~ \"Serenoa repens\",\r\n                                       .fitted < 0.50 ~ \"Sabal etonia\")) \r\n\r\n\r\n\r\n#Plot logistic regression fitted plots for green leaves\r\nggplot(data = blr_fitted, aes(x = green_leaves, \r\n                              y = .fitted)) + \r\n  \r\n  #Color points by species, change transparency and size\r\n  #Remove legend\r\n  geom_point(aes(color = species), alpha = 0.50, size = 2) +\r\n  \r\n  #Plot logistic regression curve, remove standard error\r\n  stat_smooth(method = \"glm\", se = FALSE, \r\n              method.args = list(family=binomial),\r\n              size = 1.3, color = \"grey12\") +\r\n  \r\n  #Change color\r\n  scale_color_manual(values = palmetto_colors) +\r\n  \r\n  #Change x-axis and y-axis labels\r\n  labs(x = \"Number of Green Leaves\",\r\n       y = \"Probability of Species being *Serenoa repens*\",\r\n       color = \"Species\") +\r\n  \r\n  #Change theme\r\n  theme_minimal() +\r\n  \r\n  #Add custom theme\r\n  #Make y-label part italic in rendered markdown\r\n  theme(axis.title.y = ggtext::element_markdown(),\r\n        \r\n        #Change position of legend\r\n        legend.position = c(.81, .30),\r\n        \r\n        #Bold title of legend\r\n        legend.title = element_text(face = \"bold\"),\r\n        \r\n        #Bold x-axis and y-axis label text, change size\r\n        axis.title = element_text(face = \"bold\", size = 11))\r\n\r\n\r\n\r\n\r\nFigure 4. Fitted logistic regression curve of the chosen model for the observed species, Serenoa repens (blue points) and Sabal etonia (purple points), with probabilities of a palmetto species being Serenoa repens and using number of green leaves as a predictor variable. Data source: Abrahamson, 2019.\r\n\r\nAll else being equal, the odds of a palmetto species being Serenoa repens increases by a multiplicative factor of \\(e^{0.03} = 1.03\\) for every 1 centimeter increase in plant height. The odds of a species being Serenoa repens decreases by a multiplicative factor of \\(e^{-0.05} = 0.95\\) for every 1 centimeter increases in canopy length. This means the the odds are about 5% less likely for the plant to be Serenoa repens. Similarly, every 1 centimeter increase in canopy width leads to a decrease in the odds of species being Serenoa repens by a multiplicative factor of \\(e^{-0.04} = 0.96\\). Finally, the odds of a species being Serenoa repens to increase by a multiplicative factor of \\(e^{1.91} = 6.75\\) for every additional count of green leaves on the plant. Probabilities for Serenoa repens are higher when observations report greater number of green leaves (Figure 4), otherwise probabilities are lower and likely to be Sabal etonia. This indicates that the number of green leaves on the plant is one of the best predictor variables for classifying palmetto species.\r\nClassification Accuracy of Final Model\r\n\r\n\r\nCode\r\n\r\n#Get total counts\r\nfinal_counts <- blr_fitted %>% \r\n  \r\n  #Use `across()` to obtain counts for variables that contian \"species\" name\r\n  count(across(contains(\"species\"))) \r\n\r\n\r\n\r\n########## Construct table for % classified ##########\r\n\r\n#Construct final table\r\nfinal_counts_table <- final_counts %>% \r\n  \r\n  #Make correct/incorrect label\r\n  mutate(classification_label = case_when(\r\n    (species == \"Sabal etonia\" & species_predicted == \"Sabal etonia\") ~ \"Correct\",\r\n    (species == \"Serenoa repens\" & species_predicted == \"Serenoa repens\") ~ \"Correct\",\r\n    (species == \"Sabal etonia\" & species_predicted == \"Serenoa repens\") ~ \"Incorrect\",\r\n    (species == \"Serenoa repens\" & species_predicted == \"Sabal etonia\") ~ \"Incorrect\"\r\n  )) %>% \r\n  \r\n  #Remove irrelevant variable\r\n  select(-species_predicted) %>% \r\n  \r\n  #Group by species and correctness\r\n  group_by(species, classification_label) %>% \r\n  \r\n  #Make wide format\r\n  pivot_wider(names_from = classification_label,\r\n              values_from = n) %>% \r\n  \r\n  #Make new column for percent correct\r\n  mutate(correct_pct = (Correct / (Correct + Incorrect)) * 100)\r\n\r\n\r\n\r\n########## Present table using kableExtra ##########\r\n\r\nfinal_counts_table %>% \r\n  \r\n  #Change column names\r\n  kable(col.names = c(\"Palmetto Species\", \"Sample Correctly Classified\",\r\n                      \"Sample Incorrectly Classified\", \"% Correctly Classified\"),\r\n        \r\n        caption = \"Sample size and percentage \r\n        of *Serenoa repens* and *Sabal etonia* palmettos \r\n        correctly or incorrectly classified by our binary \r\n        logistic regression model using four predictor \r\n        variables (plant height, canopy length, canopy width, \r\n        and number of green leaves). Threshold for classification \r\n        of *Serenoa repens* species was having a predicted \r\n        probability of 50% or greater. Data source: Abrahamson, 2019.\",\r\n        \r\n        #Align all cells/columns to center\r\n        align = c(\"l\", rep(\"c\", times = 3))) %>% \r\n  \r\n  #Not make full width\r\n  kable_styling(full_width = TRUE,\r\n                position = \"center\") %>% \r\n  \r\n  #Make species italic\r\n  column_spec(1, italic = TRUE, bold = TRUE)\r\n\r\n\r\n\r\nTable 4: Sample size and percentage of Serenoa repens and Sabal etonia palmettos correctly or incorrectly classified by our binary logistic regression model using four predictor variables (plant height, canopy length, canopy width, and number of green leaves). Threshold for classification of Serenoa repens species was having a predicted probability of 50% or greater. Data source: Abrahamson, 2019.\r\n\r\n\r\nPalmetto Species\r\n\r\n\r\nSample Correctly Classified\r\n\r\n\r\nSample Incorrectly Classified\r\n\r\n\r\n% Correctly Classified\r\n\r\n\r\nSabal etonia\r\n\r\n\r\n5701\r\n\r\n\r\n454\r\n\r\n\r\n92.62388\r\n\r\n\r\nSerenoa repens\r\n\r\n\r\n5548\r\n\r\n\r\n564\r\n\r\n\r\n90.77225\r\n\r\n\r\nFinally, we can evaluate how successfully this model would classify a plant as the correct species, using a 50% cutoff. The binary logistic regression model using four predictor variables (plant height, canopy length, canopy width, and number of green leaves) was successful over about 90% of the time in correctly classifying whether a palmetto species is either Serenoa repens or Sabal etonia.\r\nSummary\r\nIn conclusion, we have constructed and trained a binary logistic regression model that performs well in classifying palmetto species using physical attributes of the plant, which includes the plant height, canopy length, canopy width, and number of green leaves.\r\nVisualizing physical measurements between the two species show possible variables that would be informative for helping with model prediction\r\nModel metrics (prediction accuracy from k-fold cross-validation and AIC) reveal that the better performing model is one that includes all four predictor variables\r\nUsing a 50% probability threshold and the full dataset, the final model correctly classifies palmetto species at least 90% of the time\r\nReferences\r\nData and Literature\r\nAbrahamson, W.G. (2019). Survival, growth and biomass estimates of two dominant palmetto species of south-central Florida from 1981 - 2017, ongoing at 5-year intervals ver 1. Environmental Data Initiative. https://doi.org/10.6073/pasta/f2f96ec76fbbd4b9db431c79a770c4d5\r\nR Libraries\r\nMazerolle, M.J. (2020) AICcmodavg: Model selection and multimodel inference based on (Q)AIC(c). R package version 2.3-1. https://cran.r-project.org/package=AICcmodavg.\r\nMüller, K. (2020). here: A Simpler Way to Find Your Files. R package version 1.0.1. https://CRAN.R-project.org/package=here.\r\nPedersen, T.L. (2020). patchwork: The Composer of Plots. R package version 1.1.1. https://CRAN.R-project.org/package=patchwork\r\nRobinson, D., Hayes, A., & Couch, S. (2021). broom: Convert Statistical Objects into Tidy Tibbles. R package version 0.7.9. https://CRAN.R-project.org/package=broom.\r\nWickham et al., (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686, https://doi.org/10.21105/joss.01686.\r\nWilke, C.O. (2020). ggtext: Improved Text Rendering Support for ‘ggplot2’. R package version 0.1.1. https://CRAN.R-project.org/package=ggtext\r\nZhu, H. (2021). kableExtra: Construct Complex Table with ‘kable’ and Pipe Syntax. R package version 1.3.4. https://CRAN.R-project.org/package=kableExtra.\r\n\r\n\r\n\r\n",
    "preview": "portfolio/logistic_regression_palmettos/logistic_regression_palmettos_files/figure-html5/classification-table-1.png",
    "last_modified": "2022-03-18T20:28:02-07:00",
    "input_file": {}
  },
  {
    "path": "portfolio/hypothesis_testing_sugar_maples/",
    "title": "Hypothesis Testing: Different Watersheds on Sugar Maple Mass Growth",
    "description": "In this project, I investigated differences in sugar maple stem dry mass from treatment and control watersheds in 2003.",
    "author": [
      {
        "name": "Shuying Yu",
        "url": {}
      }
    ],
    "date": "2021-12-02",
    "categories": [
      "Hypothesis Testing",
      "R"
    ],
    "contents": "\r\n\r\nContents\r\nIntroduction\r\nResearch Question\r\nData and Methods\r\nResults\r\nStem Dry Mass and Stem Length by Watershed and Year\r\nStem Dry Mass by Watershed from 2003\r\nExploratory Visualizations, Testing Assumptions, and Decision on Test\r\nComparing Stem Dry Mass by Watershed from 2003\r\n\r\nSummary\r\nReferences\r\nData and Literature\r\nR Libraries\r\n\r\n\r\n\r\n\r\nCode\r\n\r\nknitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE,\r\n                      fig.align = \"center\")\r\n\r\n#Attach packages\r\nlibrary(tidyverse)\r\nlibrary(here)\r\nlibrary(naniar)\r\nlibrary(GGally)\r\nlibrary(patchwork)\r\nlibrary(kableExtra)\r\nlibrary(ggbeeswarm)\r\nlibrary(RColorBrewer)\r\nlibrary(effsize)\r\nlibrary(car)\r\nlibrary(broom)\r\n\r\n\r\n\r\nIntroduction\r\nThis report provides an overview for differences in sugar maple stem dry mass recorded in the year 2003 between two types of watersheds: calcium-treated and reference (no calcium added) sites. Summary statistics for stem dry mass and stem length were reported, and exploratory data analysis was conducted to visualize distributions and determine appropriate tests. Finally, differences in stem dry mass between watersheds were visually and statistically compared.\r\nResearch Question\r\nIs there a significant difference in stem dry mass between sugar maple seedlings grown in the calcium-treated watershed and sugar maple seedling grown in the reference watershed? We aim to investigate whether the median stem dry mass between the two watershed sites are significantly different from one another.\r\nNull hypothesis (\\(H_0\\)): There will be no difference in the rank order for stem dry mass of sugar maple seedlings grown in the calcium-treated watershed and the reference watershed. The ranks for stem dry mass between the calcium-treated and reference watersheds are equal.\r\nAlternative hypothesis (\\(H_1\\)): There will be a difference in the rank order for stem dry mass of sugar maple seedlings grown in the calcium-treated watershed and the reference watershed. The ranks for stem dry mass between the calcium-treated and reference watersheds are not equal.\r\nData and Methods\r\nSugar maple seedling growth was experimentally tested by measuring and comparing stem dry mass (g) from seedlings grown in soil at the calcium-treated watershed to seedlings grown in soil at the reference watershed. Experiment took place at Hubbard Brook Experimental Forest in New Hampshire, United States and data were gathered as part of the Hubbard Brook Ecosystem Study (HBES), which was made publicly available by Dr. Stephanie Juice and Dr. Tim Fahey (Juice & Fahey, 2019). Sugar maple seedlings were collected in August 2003 from low and mid-elevations at the calcium-treated and reference watersheds.\r\nFollowing summary statistics and exploratory data visualizations, comparison of median stem dry mass between seedlings grown in calcium-treated and reference watersheds was conducted using an unpaired Mann-Whitney U-test with a significance level (\\(\\alpha\\)) or threshold of 0.05. The difference in medians or ranks for stem dry mass between the two watershed sites was described using Cohen’s d effect size. All analyses were conducted in R version 4.1.1 and RStudio version 1.4.1717.\r\nResults\r\nStem Dry Mass and Stem Length by Watershed and Year\r\n\r\n\r\n\r\nCode\r\n\r\n########## Read in the data\r\n\r\nmaples <- read_csv(here(\"_portfolio\", \"data\", \"maples.csv\"))\r\n\r\n\r\n\r\n########## Clean the data\r\n\r\nmaples <- maples %>% \r\n  \r\n  #Rename variables to add units\r\n  rename(stem_length_mm = stem_length,\r\n         leaf1area_cm2 = leaf1area,\r\n         leaf2area_cm2 = leaf2area,\r\n         leaf_dry_mass_g = leaf_dry_mass,\r\n         stem_dry_mass_g = stem_dry_mass,\r\n         corrected_leaf_area_cm2 = corrected_leaf_area)\r\n\r\n\r\n\r\n########## Distributions and correlations\r\n\r\n#ggpairs(maples)\r\n\r\n##Lots of right skewed data\r\n\r\n\r\n\r\n########## Missing data\r\n\r\n# gg_miss_upset(maples, nsets = 11)\r\n#\r\n# There are 119 observations with no data for elevation, \r\n# leaf 1 and 2 area, and corrected leaf area. \r\n# \r\n# gg_miss_fct(maples, fct = year)\r\n\r\n\r\n\r\n########## Create table (WIDER)\r\n\r\nmaples_wider_table <- maples %>% \r\n  \r\n  #Select stem dry mass and stem length\r\n  select(watershed, year, stem_dry_mass_g, stem_length_mm) %>% \r\n  \r\n  #Rename watershed types\r\n  mutate(watershed = case_when(watershed == \"W1\" ~ \"Calcium-treated\",\r\n                               watershed == \"Reference\" ~ \"Reference\")) %>% \r\n\r\n  #Group by watershed, and year\r\n  group_by(watershed, year) %>% \r\n  \r\n  #Summarize mean, standard deviation, and sample size\r\n  #Mass = round to 4 decimal places\r\n  #Length = round to 1 decimal place\r\n  summarize(mean_stem_dry_mass_g = round(mean(stem_dry_mass_g, na.rm = TRUE),\r\n                                         digits = 4),\r\n            sd_stem_dry_mass_g = round(sd(stem_dry_mass_g, na.rm = TRUE),\r\n                                       digits = 4),\r\n            n_stem_dry_mass_g = sum(!is.na(stem_dry_mass_g)),\r\n            mean_stem_length_mm = round(mean(stem_length_mm, na.rm = TRUE),\r\n                                        digits = 1),\r\n            sd_stem_length_mm = round(sd(stem_length_mm, na.rm = TRUE),\r\n                                      digits = 1),\r\n            n_stem_length_mm = sum(!is.na(stem_length_mm))) \r\n  \r\n\r\n\r\n\r\n########## Create finalized table\r\n\r\nmaples_wider_table %>% \r\n  \r\n  #Use kable to make nice format\r\n  kable(col.names = c(\"Watershed\", \"Year\",\r\n        \"Mean\", \"Standard Deviation\", \"Sample Size\",\r\n        \"Mean\", \"Standard Deviation\", \"Sample Size\"),\r\n        \r\n        #Add caption\r\n        caption = c(\"Descriptive statistics \r\n                    (mean, standard deviation, sample size) \r\n                    for sugar maple stem dry mass (g) and stem \r\n                    length (mm) by watershed and year. Data source: \r\n                    Juice & Fahey (2019).\"),\r\n        \r\n        #Align all cells/columns to center\r\n        align = c(rep(\"c\", times = 8))) %>% \r\n  \r\n  #Add borders to left of 3rd and 6th column\r\n  column_spec(c(3,6), border_left = TRUE) %>% \r\n  \r\n  #Add horizontal line between watershed types\r\n  row_spec(2, extra_css = \"border-bottom: 1px solid\") %>% \r\n  \r\n  #Collapse rows for watershed\r\n  collapse_rows(columns = 1) %>% \r\n  \r\n  #Not make full width\r\n  kable_styling(full_width = TRUE) %>% \r\n  \r\n  #Add labels for stem measurement type\r\n  add_header_above(c(\" \" = 2, \r\n                     \"Stem Dry Mass (g)\" = 3, \r\n                     \"Stem Length (mm)\" = 3)) \r\n\r\n\r\n\r\nTable 1: Descriptive statistics (mean, standard deviation, sample size) for sugar maple stem dry mass (g) and stem length (mm) by watershed and year. Data source: Juice & Fahey (2019).\r\n\r\n\r\n\r\n\r\n\r\nStem Dry Mass (g)\r\n\r\n\r\n\r\n\r\nStem Length (mm)\r\n\r\n\r\n\r\nWatershed\r\n\r\n\r\nYear\r\n\r\n\r\nMean\r\n\r\n\r\nStandard Deviation\r\n\r\n\r\nSample Size\r\n\r\n\r\nMean\r\n\r\n\r\nStandard Deviation\r\n\r\n\r\nSample Size\r\n\r\n\r\nCalcium-treated\r\n\r\n\r\n2003\r\n\r\n\r\n0.0333\r\n\r\n\r\n0.0106\r\n\r\n\r\n120\r\n\r\n\r\n87.9\r\n\r\n\r\n14.3\r\n\r\n\r\n120\r\n\r\n\r\nCalcium-treated\r\n\r\n\r\n2004\r\n\r\n\r\n0.0934\r\n\r\n\r\n0.0234\r\n\r\n\r\n60\r\n\r\n\r\n97.5\r\n\r\n\r\n13.8\r\n\r\n\r\n60\r\n\r\n\r\nReference\r\n\r\n\r\n2003\r\n\r\n\r\n0.0229\r\n\r\n\r\n0.0065\r\n\r\n\r\n120\r\n\r\n\r\n81.0\r\n\r\n\r\n13.9\r\n\r\n\r\n120\r\n\r\n\r\nReference\r\n\r\n\r\n2004\r\n\r\n\r\n0.0650\r\n\r\n\r\n0.0228\r\n\r\n\r\n59\r\n\r\n\r\n85.9\r\n\r\n\r\n15.6\r\n\r\n\r\n59\r\n\r\n\r\nSugar maple stem dry mass and stem lengths appear to be greater in 2004 than in 2003 for both types of watershed (Table 1). Additionally, sample sizes for calcium-treated and reference watersheds were reduced by about half in 2004. The researchers have reported that they randomly sampled 120 seedlings each from calcium-treated and reference watersheds during 2003, and only 90 seedlings each from treated and reference watersheds during 2004 (Juice et al., 2006). Missing observations, or discrepancy in sample sizes in this case, could be explained by different reasons such as high seedling mortality rate in the winter months between 2003 and 2004 (Juice et al., 2006). Thus, it is possible that the researchers had fewer seedlings to sample from in 2004 and the average sugar maple stem dry mass and stem length are greater compared to 2003 as a result of survival and continued growth.\r\nStem Dry Mass by Watershed from 2003\r\n\r\n\r\nCode\r\n\r\n########## Subset data\r\nmaples_subset <- maples %>% \r\n  \r\n  #Year 2003\r\n  filter(year == 2003)\r\n\r\n\r\n\r\n########## Plot visualization\r\n\r\n#Plot mass by watershed\r\nggplot(data = maples_subset, aes(x = watershed,\r\n                                 y = stem_dry_mass_g)) +\r\n  \r\n  #Add beeswarm points\r\n  #Change size, spacing, and transparency of points\r\n  #Remove legend for redundancy\r\n  geom_beeswarm(aes(color = watershed),\r\n                size = 3, cex = 1.3, alpha = 0.5,\r\n                show.legend = FALSE) +\r\n  \r\n  #Define boxplot\r\n  #Add fill color and change transparency\r\n  #Change width of box and remove outlier points\r\n  #Remove legend for redundancy\r\n  geom_boxplot(fill = NA, alpha = 0.4,\r\n               width = 0.35, outlier.color = NA,\r\n               show.legend = FALSE) +\r\n\r\n  #Add mean value for watershed type\r\n  #Use point, change size and shape, change color and fill\r\n  stat_summary(fun = mean, \r\n               geom = \"point\", \r\n               shape = 20, \r\n               size = 4, \r\n               color = \"black\", \r\n               fill = \"black\") +\r\n  \r\n  #Change x-axis and y-axis labels\r\n  labs(x = \"Watershed \\n\",\r\n       y = \"Stem Dry Mass (g) \\n\") +\r\n  \r\n  #Use RBrewer color palette to fill jitter points\r\n  #From Set3\r\n  scale_color_manual(values = c(\"#80B1D3\",\"#FDB462\")) +\r\n\r\n  #Change theme\r\n  theme_classic() +\r\n  \r\n  #Rename watershed values\r\n  scale_x_discrete(labels = c(\"Reference\",\r\n                              \"Calcium-treated\")) +\r\n  \r\n  #Customize theme of plot\r\n  #Bold x-axis and y-axis labels\r\n  theme(axis.title.x = element_text(size = 13, face = \"bold\"),\r\n        axis.title.y = element_text(size = 13, face = \"bold\"),\r\n        \r\n        #Increase x-tick and y-tick text\r\n        axis.text.x = element_text(size = 11),\r\n        axis.text.y = element_text(size = 11))\r\n\r\n\r\n\r\n\r\nFigure 1. Sugar maple stem dry mass (g) observations recorded in the year 2003 for two types of watersheds, reference (no calcium added) and calcium-treated. Blue (reference) and orange (calcium-treated) points indicate individual observations for the dry mass of a sugar maple seedling stem. Boxplot endpoints indicate the 25th and 75th percentile, and the black line within the boxplot indicates the median value while the black point within the boxplot indicates the mean value for each watershed. Data source: Juice & Fahey (2019).\r\n\r\nThe distribution for stem dry mass for the reference watershed appear to be mostly normal with mean and median values very similar to each other. However, observations for stem dry mass from the calcium-treated watershed group appear to contain some outliers that may potentially skew the distribution for that sample (Figure 1). There appears to be a mean and median difference in stem dry mass between the reference and calcium-treated watershed. More observations in the calcium-treated site appear to have greater mass than the reference site. Thus, there appears to be potential differences in stem dry mass between the two watershed sites. Further investigation, such as running statistical tests, would help determine whether these differences in stem dry mass are important and significant.\r\nExploratory Visualizations, Testing Assumptions, and Decision on Test\r\n\r\n\r\nCode\r\n\r\n########## Vectors\r\n\r\n#Vectors for dry mass by watershed, dropping rows with NA values for dry mass\r\nwatershed_r <- filter(maples_subset, \r\n                      watershed == \"Reference\") %>% \r\n  drop_na(stem_dry_mass_g) %>% \r\n  pull(stem_dry_mass_g) \r\n\r\nwatershed_c <- filter(maples_subset, \r\n                      watershed == \"W1\") %>% \r\n  drop_na(stem_dry_mass_g) %>% \r\n  pull(stem_dry_mass_g) \r\n\r\n\r\n\r\n########## Descriptive stats saved as vectors\r\n\r\n#Mean and SD of dry mass by watershed\r\n#Sample size for watershed types\r\nwatershed_r_mean <- mean(watershed_r)\r\nwatershed_r_sd <- sd(watershed_r)\r\nwatershed_r_sample <- length(watershed_r)\r\nwatershed_c_mean <- mean(watershed_c)\r\nwatershed_c_sd <- sd(watershed_c)\r\nwatershed_c_sample <- length(watershed_c)\r\n\r\n\r\n\r\n########## Missing data\r\n\r\nmaples_subset_mass_watershed <- maples_subset %>% \r\n  \r\n  select(stem_length_mm:corrected_leaf_area_cm2)\r\n\r\n#ggpairs(maples_subset_mass_watershed)\r\n\r\n##Stem dry mass distribution is right-skewed, thus not normal. Sample sizes between calcium-treated and watershed are the same (n = 120). We can see that between the two watershed sites, one has more outliers than the other.\r\n\r\n\r\n# gg_miss_fct(maples_subset, fct = watershed)\r\n\r\n##No missing data for two samples.\r\n\r\n\r\n\r\n########## Explore normality: plots\r\n\r\n#Histogram overall\r\nh_full <- ggplot(data = maples_subset, aes(x = stem_dry_mass_g)) +\r\n  \r\n  #Define histogram\r\n  geom_histogram(aes(y=..density..),\r\n                 bins = 50, color = \"white\",\r\n                 fill = \"darkgreen\", alpha = 0.5) +\r\n  \r\n  #Add density \r\n  geom_density(alpha = 0.4, fill = \"darkgreen\") +\r\n  \r\n  #Change axes and add tag\r\n  labs(x = \"Stem Dry Mass (g)\",\r\n       y = \"Frequency\",\r\n       tag = \"A\") +\r\n  \r\n  #Change theme\r\n  theme_minimal() +\r\n  \r\n  #Add label for multiplot\r\n  theme(plot.tag = element_text())\r\n\r\n\r\n\r\n#Histogram by watershed\r\nh_facet <- ggplot(data = maples_subset, aes(x = stem_dry_mass_g,\r\n                                            fill = watershed)) +\r\n  \r\n  #Define histogram\r\n  geom_histogram(aes(y=..density..),\r\n                 bins = 50, color = \"white\", alpha = 0.5,\r\n                 position = \"identity\") +\r\n  \r\n  #Define density\r\n  geom_density(alpha = 0.4) +\r\n  \r\n  #Customize bar colors\r\n  scale_fill_manual(name = \"Watershed\",\r\n                    labels = c(\"Reference\",\"Calcium-treated\"),\r\n                    values = c(\"#80B1D3\",\"#FDB462\")) +\r\n  \r\n  #Change axes and add tag\r\n  labs(x = \"Stem Dry Mass (g)\",\r\n       y = \"Frequency\",\r\n       tag = \"B\") +\r\n  \r\n  #Change theme\r\n  theme_minimal() +\r\n  \r\n  #Add label for multiplot\r\n  theme(plot.tag = element_text())\r\n\r\n##Overall histogram looks right-skewed, being pulled by outliers. Histogram for both watersheds look slightly right skewed. Reference group spread around lower mass values, while calcium-treated is more pronounced in its skewness. Calcium-treated group has a few outliers that are much grreater in mass than the majority of recorded observations.  \r\n\r\n\r\n\r\n#QQ overall\r\nqq_full <- ggplot(data = maples_subset, aes(sample = stem_dry_mass_g)) +\r\n  \r\n  #Define QQ and add line\r\n  stat_qq(color = \"darkgreen\") + stat_qq_line() +\r\n  \r\n  #Change axes and add tag\r\n  labs(x = \"Theoretical Quantiles\",\r\n       y = \"Sample Quantiles\",\r\n       tag = \"C\") +\r\n  \r\n  #Change theme\r\n  theme_minimal() +\r\n  \r\n  #Add label for multiplot\r\n  theme(plot.tag = element_text())\r\n\r\n\r\n  \r\n#QQ Plot by watershed\r\nqq_facet <- ggplot(data = maples_subset, aes(sample = stem_dry_mass_g,\r\n                                             color = watershed)) +\r\n  \r\n  #Define QQ and add line\r\n  stat_qq() + stat_qq_line() +\r\n  \r\n  #Change legend parameters\r\n  #Customize point colors\r\n  scale_color_manual(name = \"Watershed\",\r\n                     labels = c(\"Reference\",\"Calcium-treated\"),\r\n                     values = c(\"#80B1D3\",\"#FDB462\")) +\r\n\r\n  #Change axes and add tag\r\n  labs(x = \"Theoretical Quantiles\",\r\n       y = \"Sample Quantiles\",\r\n       tag = \"D\") +\r\n  \r\n  #Change theme\r\n  theme_minimal() +\r\n  \r\n  #Add label for multiplot\r\n  theme(plot.tag = element_text())\r\n\r\n##Overall QQ plot shows that the distribution of the data is U-shaped, meaning there is skewness. Slight U-shaped pattern for reference group, but a very strong U-shaped pattern can be seen in the calcium-treatment group. We can see that neither of these groups hold normal distribution.\r\n\r\n\r\n\r\n#Plot histogram and QQ using patchwork library\r\n(h_full + h_facet)/(qq_full + qq_facet)\r\n\r\n\r\n\r\nCode\r\n\r\n########## Explore normality: Shapiro-Wilks test\r\nwatershed_shapirotest <- shapiro.test(maples_subset$stem_dry_mass_g)\r\nwatershed_r_shapirotest <- shapiro.test(watershed_r)\r\nwatershed_C_shapirotest <- shapiro.test(watershed_c)\r\n\r\n# Results of Shapiro-Wilks test report a p <.001 for \r\n# over all mass, and p < 0.05 for reference mass and p < .001 \r\n# for calcium-treated mass, indicating that we reject the null \r\n# hypothesis that the distribution of the data are not significantly \r\n# different from normal distribution. This means our assumption \r\n# for normality has been violated since both distributions are \r\n# not normal. This also is confirmed with the exploratory \r\n# histogram and QQ plots.\r\n\r\n\r\n\r\n########## Explore equal variance: F-test and Levene's test\r\n\r\n#F-test\r\nwatershed_ftest <- var.test(stem_dry_mass_g ~ watershed, \r\n                            data = maples_subset,\r\n                            alternative = \"two.sided\")\r\n\r\n#Levene's test\r\nwatershed_levenetest <- car::leveneTest(stem_dry_mass_g ~ watershed,\r\n                                        data = maples_subset)\r\nwatershed_levenetest_tidy <- tidy(watershed_levenetest)\r\n\r\n# Results of F-test of equal variances report a p < .001, \r\n# indicating that we reject the null hypothesis that the \r\n# ratio of variances are not equal to 1. This means the variances \r\n# are not the same between the reference and calcium treated \r\n# watersheds. Similarly, results of Levene's test report a p < 0.01, \r\n# indicating that we reject the null hypothesis that the variances \r\n# are equal. This means our assumption for homogeneity of variance \r\n# has been violated and we should need to consider comparing the \r\n# mean differences using a non-parametric test. \r\n\r\n\r\n\r\n########## Decision on test\r\n\r\n# Because the distributions if the samples violate assumptions \r\n# of normality and equal variances, we can proceed with using \r\n# a non-parametric test for comparison of stem dry mass between\r\n# different watersheds. Since we are interested in comparing \r\n# the difference between these two groups, we will use the \r\n# Mann-Whitney U test for two unpaired samples. This rank \r\n# based test does not assume normality or equal variances, \r\n# which is appropriate for this case.\r\n\r\n\r\n\r\nFigure 2. Exploratory histograms (top) and Q-Q plots (bottom) for sugar maple stem dry mass (g) recorded in 2003 for the overall dataset (left) and by different watershed sites (right). Histogram and density plots for the overall stem dry mass (A) and for stem dry mass stratified by watershed sites (B) reveal frequency distributions. Green (overall), blue (reference), and orange (calcium-treated) bars represent the frequency for sugar maple stem dry mass, and shaded region under the curve represent the respective densities. The Q-Q plots for the overall stem dry mass (C) and for the stem dry mass stratified by watershed sites (D) reveal distribution about the data. Green (overall), blue (reference), and orange (calcium-treated) points represent the sample quantiles plotted against the theoretical quantiles.\r\n\r\nThe histograms and density distributions for stem dry mass are right-skewed, with samples from the calcium-treated watershed containing most of the outlier points (Figure 2). The Q-Q plots for stem dry mass confirm that the distributions of the samples are not normal. A Shapiro-Wilk test was performed and showed that the distribution of stem dry mass departed significantly from normality (W = 0.92, p < 0.001), and Levene’s test indicated unequal variances (F(1, 238) = 9.73, p < 0.01) between the reference and calcium-treated samples. As a result, we can proceed with using a non-parametric test for comparison of stem dry mass between different watersheds. Because we are interested in comparing the difference in stem dry mass between two watershed sites, the appropriate test to use will be the Mann-Whitney U-test for unpaired samples as this rank based test does not assume normality or equal variances.\r\nComparing Stem Dry Mass by Watershed from 2003\r\n\r\n\r\nCode\r\n\r\n########## Mann-Whitney U test\r\n\r\n#Test\r\nwatershed_utest <- wilcox.test(watershed_r, watershed_c,\r\n                                paired = FALSE,\r\n                                conf.level = 0.95)\r\n\r\n#Save as tidy\r\nwatershed_utest_tidy <- tidy(watershed_utest)\r\n\r\n\r\n\r\n########## Effect size\r\n\r\nwatershed_effsize <- cohen.d(watershed_r, watershed_c)\r\n\r\n\r\n\r\nStem dry mass for sugar maple seedlings recorded in the year 2003 that were grown in calcium-treated watershed sites have greater mass (Mdn = 0.0324 g, SD = \\(\\pm\\) 0.0106 g, n = 120) than those grown in the reference watershed sites (Mdn = 0.0222 g, SD = \\(\\pm\\) 0.0065 g, n = 120) (Figure 1). The absolute difference in medians is 0.0102 g (about a 37.29% difference) and this difference in medians or ranks is statistically significant (Mann-Whitney U-test: U = 2624.5, p < 0.001). The magnitude of the effect size is large (Cohen’s d = -1.19), indicating that the difference in median stem dry mass has practical significance.\r\nIn conclusion, adding calcium to acid-rain impacted watersheds seems to influence sugar maple growth by increasing stem dry mass, suggesting that calcium plays an important role in supporting plant growth. This experimental treatment of calcium addition provides evidence for a significant effect on stem dry mass, but other variables could be at play that impact stem dry mass. For example, calcium may contribute to plant survival, in which case the seedlings may have greater mass in the calcium-treated watershed just due to increased health and growth compared to seedlings in the reference watershed (Juice et al., 2006). Thus, while calcium addition does appears to be positively associated with stem dry mass, causal relationships remain to be established until other relationships and interactions with soil pH, manganese, mycorrhizal colonization, and sugar maple nutrition and growth have been considered (Juice et al., 2006).\r\nSummary\r\nIn conclusion, we found that Exploratory data analysis reveals the following initial findings:\r\nOn average, stem dry mass and stem length in calcium-treated watersheds appear to be greater than those in reference watersheds for both 2003 and 2004\r\nVisualizing stem dry mass by watersheds from the year 2003 show possible mean and median differences in stem dry mass\r\nCalcium-treated seedlings have significantly greater ranks for stem dry mass than seedlings in the reference watershed, and the effect size is large (Cohen’s d = -1.19)\r\nFuture directions or next steps:\r\nConduct a one-way ANOVA to compare stem dry mass by watershed and year\r\nAssess other variables collected from the experiment to explore relationships between stem dry mass between the reference and calcium-treated watersheds\r\nUse a rank based effect size to measure differences since we used a rank based test\r\nReferences\r\nData and Literature\r\nJuice, S. M., Fahey, T. J., Siccama, T. G., Driscoll, C. T., Denny, E. G., Eagar, C., … & Richardson, A. D. (2006). Response of sugar maple to calcium addition to northern hardwood forest. Ecology, 87(5), 1267-1280.\r\nJuice, S. & Fahey, T. (2019). Health and mycorrhizal colonization response of sugar maple (Acer saccharum) seedlings to calcium addition in Watershed 1 at the Hubbard Brook Experimental Forest ver 3. Environmental Data Initiative. https://doi.org/10.6073/pasta/0ade53ede9a916a36962799b2407097e.\r\nR Libraries\r\nClarke, E. & Sherrill-Mix, S. (2017). ggbeeswarm: Categorical Scatter (Violin Point) Plots. R package version 0.6.0. https://CRAN.R-project.org/package=ggbeeswarm.\r\nFox, J. & Weisberg, S. (2019). An {R} Companion to Applied Regression, Third Edition. Thousand Oaks CA: Sage. URL: https://socialsciences.mcmaster.ca/jfox/Books/Companion/.\r\nNeuwirth, E. (2014). RColorBrewer: ColorBrewer Palettes. R package version 1.1-2. https://CRAN.R-project.org/package=RColorBrewer.\r\nMüller, K. (2020). here: A Simpler Way to Find Your Files. R package version 1.0.1. https://CRAN.R-project.org/package=here.\r\nPedersen, T.L. (2020). patchwork: The Composer of Plots. R package version 1.1.1. https://CRAN.R-project.org/package=patchwork.\r\nRobinson, D., Hayes, A., & Couch, S. (2021). broom: Convert Statistical Objects into Tidy Tibbles. R package version 0.7.9. https://CRAN.R-project.org/package=broom.\r\nSchloerke, B., Cook, D., Larmarange, J., Briatte, F., Marbach, M., Thoen, E., Elberg, A. & Crowley, J. (2021). GGally: Extension to ‘ggplot2’. R package version 2.1.2. https://CRAN.R-project.org/package=GGally.\r\nTierney, N., Cook, D., McBain, M., & Fay, C. (2021). naniar: Data Structures, Summaries, and Visualisations for Missing Data. R package version 0.6.1. https://CRAN.R-project.org/package=naniar.\r\nTorchiano, M. (2020). effsize: Efficient Effect Size Computation. doi: 10.5281/zenodo.1480624, R package version 0.8.1, https://doi.org/10.5281/zenodo.1480624.\r\nWickham et al., (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686, https://doi.org/10.21105/joss.01686.\r\nZhu, H. (2021). kableExtra: Construct Complex Table with ‘kable’ and Pipe Syntax. R package version 1.3.4. https://CRAN.R-project.org/package=kableExtra.\r\n\r\n\r\n\r\n",
    "preview": "portfolio/hypothesis_testing_sugar_maples/hypothesis_testing_sugar_maples_files/figure-html5/dry_mass_stem_plot-1.png",
    "last_modified": "2022-03-18T20:20:22-07:00",
    "input_file": {}
  },
  {
    "path": "portfolio/dataviz_mono_lake/",
    "title": "Data Visualization: Mono Lake Elevation Levels from 1850-2017",
    "description": "In this project, I created a data visualization of Mono Lake elevation levels and its major historical events using highly customized aesthetics in R.",
    "author": [
      {
        "name": "Shuying Yu",
        "url": {}
      }
    ],
    "date": "2021-11-28",
    "categories": [
      "Data Visualization",
      "R"
    ],
    "contents": "\r\n\r\nContents\r\nIntroduction\r\nData Visualization\r\nReferences\r\nData and Literature\r\nR Libraries\r\n\r\n\r\n\r\n\r\nCode\r\n\r\nknitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE,\r\n                      fig.align = \"center\")\r\n\r\n#Attach packages\r\nlibrary(tidyverse)\r\nlibrary(here)\r\nlibrary(janitor)\r\n\r\n\r\n\r\nIntroduction\r\nMono Lake is a terminal saline lake in Lee Vining, California, northeast of Yosemite National Park in the Pamidu Toiyabe (Sierra Nevada), and is home to the Kootzaduka’a (or Kutzadika’a) Tribe.\r\nData Visualization\r\n\r\n\r\nCode\r\n\r\n########## Read in the data \r\n\r\n#Skip first 4 lines, 5th line is header\r\nmono_lake <- read_csv(here(\"_portfolio\", \"data\", \"mono_lake_annual_levels.csv\"),\r\n                      skip = 5)\r\n\r\n#Check data\r\n#head(mono_lake)\r\n\r\n\r\n\r\n########## Clean data\r\n\r\nmono_lake <- mono_lake %>% \r\n  \r\n  #Convert to lower snake case\r\n  clean_names() %>% \r\n  \r\n  #Select only year and lake level above sea level\r\n  select(year, lake_level_feet_above_sea_level) \r\n\r\n#Check data\r\n#head(mono_lake)\r\n\r\n\r\n\r\n########## Plotting\r\n\r\n#Line plot of lake elevation levels over time in years\r\nggplot(data = mono_lake, aes(x = year,\r\n                             y = lake_level_feet_above_sea_level)) +\r\n  \r\n  #Define line plot\r\n  #Change size and color of line\r\n  geom_line(size = 1.15, color = \"aquamarine4\") +\r\n  \r\n  \r\n  \r\n  ########## Limits\r\n  \r\n  theme_minimal() +\r\n  \r\n  #Change x-axis scale\r\n  scale_x_continuous(breaks = seq(1850, 2017, by = 20)) +\r\n  \r\n  #Change y-axis scale\r\n  scale_y_continuous(breaks = seq(6350, 6440, by = 10)) +\r\n  \r\n  #Focus plot area on limits and allow text outside margins\r\n  coord_cartesian(xlim = c(1850,2017),\r\n                  ylim = c(6350, 6440), clip = \"off\") +\r\n  \r\n  \r\n  ########## Add horizontal lines: ELEVATION (Y-AXIS)\r\n  \r\n  #6392 ft: standard elevation set by State Water Board Decision 1631 in 1994\r\n  # geom_segment(aes(x = 1994.5, y = 6392,\r\n  #                  xend = Inf, yend = 6392),\r\n  #              color = \"lightsteelblue3\", size = 1.3) +\r\n  \r\n  #6377 ft: Land bridges emerge between the mainland and islands\r\n  geom_segment(aes(x = 1844, y = 6377,\r\n                   xend = Inf, yend = 6377),\r\n               color = \"dodgerblue3\", size = 1.3, linetype = \"dashed\") +\r\n\r\n  #6360 ft: Decrease in availability of brine shrimp for food (salinity at 120 g/L)\r\n  geom_segment(aes(x = 1844, y = 6360,\r\n                   xend = Inf, yend = 6360),\r\n               color = \"darkturquoise\", size = 1.3, linetype = \"dotdash\") +\r\n  \r\n  #6350 ft: Impacts on gulls due to decrease of food and when salinities above 150 g/L\r\n  geom_segment(aes(x = 1844, y = 6350,\r\n                   xend = Inf, yend = 6350),\r\n               color = \"lightblue2\", size = 1.3, linetype = \"dotted\") +\r\n  \r\n\r\n  \r\n  \r\n  ########## Shading\r\n  \r\n  #Shade area under 6350 ft\r\n  #Give geom_rect a single row data object to ensure only one rectangle is drawn\r\n  # geom_rect(data = mono_lake[1,],\r\n  #           aes(xmin = 1850, xmax = 2017, ymin = -Inf, ymax = 6350), \r\n  #           fill = \"lightblue2\", alpha = 0.2) +\r\n  \r\n  \r\n  \r\n  ########## Text\r\n\r\n  ##### 6392 text\r\n  # annotate(geom = \"text\", x = 2030, y = 6392, \r\n  #          label = expression(bold(\"6,392 feet:\")), \r\n  #                   hjust = 0, vjust = 0.5, size = 3) +\r\n  # annotate(geom = \"text\", x = 2030, y = 6389, \r\n  #          label = \"standard elevation\", \r\n  #                   hjust = 0, vjust = 0.5, size = 3) +\r\n\r\n  ##### 6377 text\r\n  annotate(geom = \"text\", x = 2030, y = 6377, \r\n           label = expression(bold(\"6,377 feet:\")), \r\n                    hjust = 0, vjust = 0.5, size = 3) +\r\n  annotate(geom = \"text\", x = 2030, y = 6374, \r\n           label = \"land bridges form\", \r\n                    hjust = 0, vjust = 0.5, size = 3) +\r\n\r\n  ##### 6360 text\r\n  annotate(geom = \"text\", x = 2030, y = 6360, \r\n           label = expression(bold(\"6,360 feet:\")), \r\n                    hjust = 0, vjust = 0.5, size = 3) +\r\n  annotate(geom = \"text\", x = 2030, y = 6357, \r\n           label = \"salinity at 120 g/L\", \r\n                    hjust = 0, vjust = 0.5, size = 3) +\r\n  \r\n  ##### 6350 text\r\n  annotate(geom = \"text\", x = 2030, y = 6350, \r\n           label = expression(bold(\"6,350 feet:\")), \r\n                    hjust = 0, vjust = 0.5, size = 3) +\r\n  annotate(geom = \"text\", x = 2030, y = 6347, \r\n           label = \"salinity at 150 g/L\", \r\n                    hjust = 0, vjust = 0.5, size = 3) +\r\n  \r\n  \r\n  \r\n  ########## Add vertical lines: YEAR (X-AXIS)\r\n  \r\n  ##### 1941: LA DWP begins diverting water from lake\r\n  \r\n  ##### 1941 point\r\n  #Point\r\n  geom_point(aes(x = 1941, y = 6417.5), color = \"darkorange1\", size = 3.5) +\r\n  \r\n  ##### 1941 arrow\r\n  geom_segment(x = 1941, y = 6420, xend = 1941, yend = 6425,\r\n               arrow = arrow(length = unit(2.5, \"mm\")), ends = \"first\") +\r\n  \r\n  ##### 1941 text\r\n  annotate(geom = \"text\", x = 1927, y = 6433, \r\n           label = expression(bold(\"1941:\")),\r\n                    hjust = 0, size = 3) +\r\n  annotate(geom = \"text\", x = 1940, y = 6433,\r\n           label = \"L.A. DWP diverts water \\nfrom tributary streams\",\r\n           hjust = 0, vjust = 0.85, size = 3) +\r\n  \r\n  \r\n  \r\n  #####1976: First comprehensive ecological study of Mono Lake by UCD and Stanford\r\n  \r\n  ##### 1976 point\r\n  geom_point(aes(x = 1976, y = 6378.60), color = \"darkorange1\", size = 3.5) +\r\n  \r\n  ##### 1976 arrow\r\n  geom_segment(x = 1976, y = 6383, xend = 1976, yend = 6410,\r\n               arrow = arrow(length = unit(2.5, \"mm\")), ends = \"first\") +\r\n  \r\n  ##### 1976 text\r\n  annotate(geom = \"text\", x = 1962, y = 6418, \r\n           label = expression(bold(\"1976:\")),\r\n                    hjust = 0, size = 3) +\r\n  annotate(geom = \"text\", x = 1975, y = 6418,\r\n           label = \"First comprehensive ecological \\nstudy of Mono Lake\",\r\n           hjust = 0, vjust = 0.85, size = 3) +\r\n  \r\n  \r\n  \r\n  \r\n  ##### 1994: State Water Board Decision 1631, levels set at 6392 feet to protect Mono Lake’s public trust values\r\n  \r\n  ##### 1994 point\r\n  geom_point(aes(x = 1994, y = 6374.60), color = \"darkorange1\", size = 3.5) +\r\n  \r\n  ##### 1994 arrow\r\n  geom_segment(x = 1994, y = 6380, xend = 1994, yend = 6395,\r\n               arrow = arrow(length = unit(2.5, \"mm\")), ends = \"first\") +\r\n  \r\n  ##### 1994 text\r\n  annotate(geom = \"text\", x = 1980, y = 6403, \r\n           label = expression(bold(\"1994:\")),\r\n                    hjust = 0, size = 3) +\r\n  annotate(geom = \"text\", x = 1993, y = 6403,\r\n           label = \"State Water Board \\nDecision 1631\",\r\n           hjust = 0, vjust = 0.85, size = 3) +\r\n  \r\n  \r\n\r\n  \r\n  ########## Theme\r\n\r\n  #Change x-axis and y-axis labels\r\n  labs(x = \"\\nYear\",\r\n       y = \"Mono Lake Elevation Levels \\n(feet above sea level)\\n\") +\r\n  \r\n  \r\n  #Customize theme of plot\r\n  #Bold and increase font of x-axis and y-axis labels\r\n  theme(axis.title.x = element_text(size = 12, face = \"bold\"),\r\n        axis.title.y = element_text(size = 12, face = \"bold\"),\r\n        \r\n        #Increase x-tick and y-tick text\r\n        axis.text.x = element_text(size = 10),\r\n        axis.text.y = element_text(size = 10),\r\n        \r\n        #Color x-axis and y-axis\r\n        axis.line.x = element_line(color = \"grey50\"),\r\n\r\n        #Increase margins: theme_minimal()$plot.margin\r\n        #Top, right, bottom, left\r\n        plot.margin = unit(c(0.2, 3, 0.2, 0.2), \"cm\")) \r\n\r\n\r\n\r\n\r\n\r\nFigure 1. Timeline of major historical events and legal decisions that have impacted Mono Lake elevation levels (feet above sea level) from the years 1850 - 2017. Text above Mono Lake elevation levels (green solid line) describes specific events that took place at certain years (orange points) and text to the right of the plot margin describes specific changes on the Mono Lake ecosystems at critical levels of elevation. Mono Lake elevation levels began to decline in 1941 when the Los Angeles (L.A.) Department of Water & Power (DWP) diverted water from the lake to meet the growing water demands of L.A. When elevation levels dropped to 6,377 feet (dark blue dashed line), land bridges emerged between the mainland and islands, which allowed predators to access major bird nesting sites. In 1976, the first comprehensive ecological study conducted by students at UC Davis and Stanford discovered that water diversions change lake salinity levels. At 6,360 feet (turquoise dot-dash line), brine shrimp and brine flies, which are main food sources for aquatic birds at Mono Lake, are adversely affected. At 6,350 feet (light blue dotted line), impacts become acute. In 1994, after a series of successful lawsuits charged by the Mono Lake Committee against DWP’s water diversions, the State Water Board issued Decision 1631, which set a lake level of 6,392 feet to protect Mono Lake’s public trust values, required permanent streamflows for Mono Basin streams, and ordered DWP to restore streams and waterfowl habitat damaged as a result of past diversions. Data source: Mono Basin Clearinghouse.\r\nReferences\r\nData and Literature\r\nMono Basin Clearinghouse: Building a Digital Library for Better Resource Management. Accessed 11/20/2021. https://www.monobasinresearch.org/.\r\nR Libraries\r\nFirke, S. (2021). janitor: Simple Tools for Examining and Cleaning Dirty Data. R package version 2.1.0. https://CRAN.R-project.org/package=janitor.\r\nMüller, K. (2020). here: A Simpler Way to Find Your Files. R package version 1.0.1. https://CRAN.R-project.org/package=here.\r\nWickham et al., (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686, https://doi.org/10.21105/joss.01686.\r\n\r\n\r\n\r\n",
    "preview": "portfolio/dataviz_mono_lake/dataviz_mono_lake_files/figure-html5/data-viz-1.png",
    "last_modified": "2022-03-18T20:19:35-07:00",
    "input_file": {}
  },
  {
    "path": "portfolio/regression_snowshoe_hares/",
    "title": "Linear Regression: Juvenile Snowshoe Hares at Bonanza Creek",
    "description": "In this project, I created an exploratory report for the relationship between body weight and hind foot length in juvenile female and male snowshoe hares using linear regression analysis.",
    "author": [
      {
        "name": "Shuying Yu",
        "url": {}
      }
    ],
    "date": "2021-11-10",
    "categories": [
      "Regression",
      "R"
    ],
    "contents": "\r\n\r\nContents\r\nIntroduction\r\nData and Methods\r\nPreliminary Results\r\nAnnual Juvenile Hare Trap Counts\r\nJuvenile Hare Weights by Sex and Trap Site\r\nJuvenile Weight Comparison by Sex\r\nComparison Between Juvenille Weight & Hind Foot Length\r\n\r\nSummary\r\nReferences\r\nData and Literature\r\nR Libraries\r\n\r\n\r\n\r\n\r\nCode\r\n\r\nknitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE,\r\n                      fig.align = \"center\")\r\n\r\n#Attach packages\r\nlibrary(tidyverse)\r\nlibrary(here)\r\nlibrary(lubridate)\r\nlibrary(RColorBrewer)\r\nlibrary(kableExtra)\r\nlibrary(car)\r\nlibrary(effsize)\r\nlibrary(broom)\r\nlibrary(GGally)\r\n\r\n\r\n\r\nIntroduction\r\nThis report provides an exploratory overview of differences in body weight between juvenile female and male snowshoe hares (Lepus americanus) that were observed in capture-recapture studies at the Bonanza Creek Experimental Forest in interior Alaska from 1999 - 2012 during four primary months per year (June, August, November, and March) that corresponded with life stages of hares to study population densities (Flora, 2002; Kielland et al., 2010; Kielland et al., 2017). Counts of annual juvenile snowshoe hare traps were visualized to explore number of hares observed throughout the course of the study. Body weights of juvenile snowshoe hares were visually compared by sex across three different live trap sites (Bonanza Mature, Bonanza Riparian, and Bonanza Spruce Stand), and weights between females and males overall were statistically compared. Finally, the relationship between body weight and hind foot length for juvenile hares was also explored.\r\nData and Methods\r\nSnowshoe hare physical data was collected from 1998 - 2012 and made available by Dr. Knut Kielland and colleagues as part of the Bonanza Creek Long Term Ecological Research (BNZ LTER) project in interior Alaska (Kielland et al., 2017). Live trap sites included the Bonanza Mature, Bonanza Riparian, and Bonanza Spruce Stand locations which varied by vegetation. The dataset contains 378 unique observations of juvenile snowshoe hares collected during mainly the months of June, August, November, and March for each year from 1999 - 2012 (Kielland et al., 2010). Study phase originally took place from 1998 - 2002, but recorded data collection for juvenile hares began in 1999 and data collection efforts continued after the initial publication of the dataset. Thus, this exploratory data analysis report will include all the available data so far for juvenile hares.\r\nFollowing exploratory data visualizations, weight comparison between juvenile female and male hares was conducted using a two-sample, unpaired t-test with a significance level (\\(\\alpha\\)) or threshold of 0.05. The difference in means between the two groups was described using Cohen’s d effect size. The relationship between juvenile hare weight and hind foot length was explored by simple linear regression. Diagnostic plots were assessed to determine the fit of the linear model. All analyses were conducted in R version 4.1.1 and RStudio version 1.4.1717.\r\nPreliminary Results\r\nAnnual Juvenile Hare Trap Counts\r\n\r\n\r\nCode\r\n\r\n########## Read in the data \r\n\r\nhares <- read_csv(here(\"_portfolio\", \"data\", \"bonanza_hares.csv\"))\r\n\r\n#Check data\r\n#head(hares)\r\n\r\n\r\n\r\n########## Clean data\r\n\r\nhares <- hares %>% \r\n  \r\n  #Format MM/DD/YY date to YYYY-MM-DD\r\n  mutate(date = mdy(date)) %>% \r\n  \r\n  #Rename variables to include units\r\n  rename(weight_g = weight,\r\n         hindft_mm = hindft,\r\n         age_group = age)\r\n\r\n#Check data\r\n#head(hares)\r\n\r\n\r\n\r\n########## Filter juvenile hares\r\n\r\nhares_j <- hares %>% \r\n  \r\n  #Filter for juvenile hares\r\n  filter(age_group == \"j\")\r\n\r\n\r\n\r\n########## Count juvenile hare traps by year\r\n\r\nhares_j_trap_counts <- hares_j %>% \r\n  \r\n  #Create year column\r\n  mutate(year = year(date)) %>% \r\n  \r\n  #Group by year\r\n  group_by(year) %>% \r\n  \r\n  #Summarize trap counts\r\n  summarize(trap_counts = n())\r\n\r\n\r\n\r\n########## Trap count statistics \r\n\r\n#Descriptive statistics for juvenile trap counts\r\nhares_j_trap_counts_stats <- hares_j_trap_counts %>% \r\n  summarize(min_trap = min(trap_counts),\r\n            max_trap = max(trap_counts),\r\n            mean_trap = mean(trap_counts),\r\n            median_trap = median(trap_counts),\r\n            sd_trap = sd(trap_counts))\r\n\r\n\r\n\r\n########## Trap counts plot by year\r\n\r\n#Bar plot\r\nggplot(data = hares_j_trap_counts, aes(x = year,\r\n                                       y = trap_counts)) +\r\n  \r\n  #Define bar plot\r\n  #Change fill color\r\n  geom_col(fill = \"skyblue\") +\r\n  \r\n  #Relabel x-axis and y-axis\r\n  labs(x = \"\\nYear\",\r\n       y = \"Frequency\\n\") +\r\n  \r\n  #Add text for y-values\r\n  #Change text color\r\n  #Adjust vertical text placement and text size\r\n  geom_text(aes(label = trap_counts),\r\n            color = \"grey50\",\r\n            vjust = -0.5, size = 3) +\r\n  \r\n  #Scale x-tick marks in intervals of 1 from 1999-2012\r\n  scale_x_continuous(breaks = seq(1999, 2012, 1)) +\r\n  \r\n  #Scale y-tick marks in limits of 0-140\r\n  #Scale y-tick marks in intervals of 20 from 0-140\r\n  scale_y_continuous(limits = c(0, 140),\r\n                     breaks = seq(0, 140, 20)) +\r\n  \r\n  #Change theme\r\n  theme_classic() +\r\n  \r\n  #Add custom theme\r\n  #Change y-axis text size\r\n  theme(axis.text.y = element_text(size = 11),\r\n        \r\n        #Change axes title size and make bold\r\n        axis.title = element_text(size = 12, face = \"bold\"))\r\n\r\n\r\n\r\n\r\nFigure 1. Counts of the total juvenile snowshoe hare trappings from 1999 - 2012. Numbers above each bar plot represent the total count of snowshoe hares trapped for that year. There were no records of hare trap counts for the years 2002 and 2009. Data source: Kielland et al. (2017).\r\n\r\nOne average, the number of juvenile hare trappings was 31.5 hares across the 14 years (1999 - 2012), with a standard deviation of \\(\\pm\\) 35.9 hares. The median annual trap count was 18.5 hares. The number of hare trappings ranged from 2 - 126, with the lowest count recorded in 2010 and the highest count recorded in 1999. Snowshoe hares are reported to have population fluctuations of 8 - 11 years due to vegetation and predator densities in interior Alaska (Kielland et al., 2017). According to the researchers of the study, the snowshoe hare density observed was highest in 1999 and declined thereafter (Kielland et al., 2017), which is consistent with the exploratory figure shown above (Figure 1).\r\nTo standardize juvenile hare population counts moving forward, the researchers could trap hares monthly for each year the study took place rather than just mainly four months each year. Additionally, setting traps on consistent dates per month would help with standardizing the juvenile hare population counts (i.e., traps set on October 30th and November 30th, not October 30th and November 1st). The researchers should also set the same number of traps each year, with the same number of traps evenly divided between each trap site. Additionally, considering other variables like different trap sites and sex could explain different juvenile hare populations seen over the years.\r\nJuvenile Hare Weights by Sex and Trap Site\r\n\r\n\r\nCode\r\n\r\n########## Subset data for juvenile hare weights\r\n\r\n#Hare weights\r\nhares_j_weights <- hares_j %>% \r\n  \r\n  #Group by sex and site\r\n  group_by(sex, grid) %>% \r\n  \r\n  #Rename sites and sex \r\n  mutate(grid = case_when(grid == \"bonbs\" ~ \"Bonanza Spruce Stand\",\r\n                          grid == \"bonmat\" ~ \"Bonanza Mature\",\r\n                          grid == \"bonrip\" ~ \"Bonanza Riparian\"),\r\n         sex = case_when(sex == \"f\" ~ \"Female\",\r\n                         sex == \"m\" ~ \"Male\",\r\n                         is.na(sex) == TRUE ~ \"Unknown\")) \r\n\r\n\r\n\r\n########## Plot weights by trap site and sex\r\n\r\n#Plot weights by site and sex\r\nggplot(data = hares_j_weights, aes(x = sex,\r\n                                   y = weight_g)) +\r\n  \r\n  #Define boxplot\r\n  #Remove fill color and outlier points\r\n  #Remove legend for redundancy\r\n  geom_boxplot(aes(fill = sex), alpha = 0.4,\r\n               outlier.color = NA,\r\n               show.legend = FALSE) +\r\n  \r\n  #Add scatter points\r\n  #Color by sex, add jitter width, change size and transparency\r\n  #Remove legend for redundancy\r\n  geom_jitter(aes(color = sex),\r\n              position = position_jitter(width = .1),\r\n              size = 2.0, alpha = 0.5,\r\n              show.legend = FALSE) +\r\n  \r\n  #Add mean value for each sex for each site\r\n  #Use point, change size and shape, change color and fill\r\n  stat_summary(fun = mean, \r\n               geom = \"point\", \r\n               shape = 20, \r\n               size = 4, \r\n               color =\"black\", \r\n               fill=\"black\") +\r\n\r\n  #Facet by site\r\n  facet_wrap(~ grid) +\r\n  \r\n  #Change x-axis and y-axis labels\r\n  #Change legent title\r\n  labs(x = \"\\nSex by Trap Site\",\r\n       y = \"Weight (g)\\n\",\r\n       color = \"Sex\") +\r\n  \r\n  #Use RColorBrewer color palette to fill boxplot\r\n  scale_fill_brewer(palette = \"Accent\") +\r\n  \r\n  #Use RColorBrewer color palette to fill jitter points\r\n  scale_color_brewer(palette = \"Accent\") +\r\n\r\n  #Change theme\r\n  theme_bw() +\r\n  \r\n  #Add custom theme\r\n  #Change axes text size\r\n  theme(axis.text = element_text(size = 11),\r\n        \r\n        #Change axes title size and make bold\r\n        axis.title = element_text(size = 12, face = \"bold\"))\r\n\r\n\r\n\r\n\r\nFigure 2. Female, male, and unknown sex of juvenile snowshoe hare weights (g) were observed across three different trap sites (Bonanza Mature, Bonanza Riparian, and Bonanza Spruce Stand) from 1999 - 2012. For the Bonanza Spruce Stand site, snowshoe hares were only labeled as either female or male. Green (female), purple (male), and orange (unknown) points indicate individual observations for the weight of a juvenile snowshoe hare. Boxplot endpoints indicate the 25th and 75th percentile, and the black line within the boxplot indicates the median value while the black point within the boxplot indicates the mean value for each sex. Data source: Kielland et al. (2017).\r\n\r\nThe distribution for weights for each sex across the three trap sites appear to be mostly normal with some mean and median values very similar to each other, and also contain few outliers (Figure 2). There appears to be a mean and median difference in weights between juvenile female and male snowshoe hares. There were only a few juvenile hares whose sex were labeled as unknown, which are unconfirmed males (Kielland et al., 2017) present for Bonanza Mature and Bonanza Riparian sites but not for the Bonanza Spruce Stand site. In addition to potential sex differences in mean weights, there could also be differences in mean weights between the different trap sites. Further investigation, such as running statistical tests, would help determine whether these differences in weights are important and significant.\r\nJuvenile Weight Comparison by Sex\r\n\r\n\r\n\r\nCode\r\n\r\n########## Subset dataframe\r\n\r\n#Dataframe of only juvenile female and male hares\r\nhares_j_weights_sex <- hares_j %>% \r\n  \r\n  #Filter for females and males only\r\n  filter(sex %in% c(\"f\", \"m\")) %>% \r\n  \r\n  #Rename sex values\r\n  mutate(sex = case_when(sex == \"f\" ~ \"Female\",\r\n                         sex == \"m\" ~ \"Male\"))\r\n\r\n\r\n\r\n########## Vectors\r\n\r\n#Vectors for weight by sex, dropping rows with NA values for weight\r\nhares_m <- filter(hares_j_weights_sex, sex == \"Male\") %>% \r\n  drop_na(weight_g) %>% \r\n  pull(weight_g) \r\nhares_f <- filter(hares_j_weights_sex, sex == \"Female\") %>% \r\n  drop_na(weight_g) %>% \r\n  pull(weight_g) \r\n\r\n\r\n\r\n########## Descriptive stats saved as vectors\r\n\r\n#Mean and SD of weights by sex\r\n#Sample size for male and female groups\r\nhares_m_mean <- mean(hares_m)\r\nhares_m_sd <- sd(hares_m)\r\nhares_m_sample <- length(hares_m)\r\nhares_f_mean <- mean(hares_f)\r\nhares_f_sd <- sd(hares_f)\r\nhares_f_sample <- length(hares_f)\r\n\r\n\r\n\r\n########## Explore normality: plots\r\n\r\n#Histogram by sex\r\nhist_sex <- ggplot(data = hares_j_weights_sex, aes(x = weight_g)) +\r\n\r\n  #Define histogram\r\n  geom_histogram(aes(fill = sex),\r\n                 bins = 12, color= \"white\") +\r\n\r\n  #Facet by sex\r\n  facet_wrap(~ sex)\r\n\r\n##Female histogram looks relatively normal, while male \r\n##histogram looks bimodal. \r\n\r\n\r\n\r\n#QQ Plot by sex\r\nqq_sex <- ggplot(data = hares_j_weights_sex, aes(sample = weight_g)) +\r\n  \r\n  #Define QQ and add line\r\n  geom_qq(aes(color = sex)) + geom_qq_line() +\r\n  \r\n  #Facet by class\r\n  facet_wrap(~ sex)\r\n\r\n##Female QQ plot show slight S-shaped pattern, and this \r\n##pattern is more pronounced in the male QQ plot. \r\n##This violates assumption of normality of the observations \r\n##for a parametric t-test. \r\n\r\n\r\n\r\n########## Explore normality: Shapiro-Wilks test\r\n\r\nhares_m_shapirotest <- shapiro.test(hares_m)\r\nhares_f_shapirotest <- shapiro.test(hares_f)\r\n\r\n##Results of Shapiro-Wilks test report a p < 0.05 for \r\n##female weights and p < .001 for male weights, indicating \r\n##that we can reject the null hypothesis that the distribution \r\n##of the data are not significantly different from normal \r\n##distribution. This means our assumption for normality is \r\n##violated since both weight distributions are significantly non-normal.\r\n\r\n\r\n\r\n########## Explore equal variance: Levene's test\r\n\r\nhares_levenetest <- car::leveneTest(weight_g ~ sex,\r\n                                    data = hares_j_weights_sex)\r\n\r\n##Results of Levene's test report a p < 0.05, indicating that \r\n##we can reject the null hypothesis that the variances are equal. \r\n##This means our assumption for homogeneity of variance is violated \r\n##and we should use a nonparametric test. \r\n\r\n\r\n\r\n########## Decision on test\r\n\r\n###Non-parametric test for unpaired two sample data is \r\n##Mann Whitney U test. However, given the INSTRUCTIONS to perform \r\n##a means comparison and to run a t-test, I will be using a t-test \r\n##rather than using the non-parametric test. It is possible that \r\n##our sample size is large enough and based on the central limit \r\n##theorem, we can assume that the population means will be \r\n##normally distributed. \r\n\r\n\r\n\r\n########## T-test\r\n\r\n#Two-sided unpaired test, alpha = 0.05\r\nhares_ttest <- t.test(hares_m, hares_f,\r\n                      alternative = \"two.sided\",\r\n                      paired = FALSE,\r\n                      conf.level = 0.95)\r\n\r\n#Save as tidy frame\r\nhares_ttest_tidy <- tidy(hares_ttest)\r\n\r\n\r\n\r\n########## Effect size\r\nhares_t_effsize <- cohen.d(hares_m, hares_f)\r\n\r\n\r\n\r\n########## Create table\r\n\r\nhares_j_weights_sex_table <- hares_j_weights_sex %>% \r\n  \r\n  #Group by sex \r\n  group_by(sex) %>% \r\n  \r\n  #Summary statistics: mean, standard deviation, sample size\r\n  #Only count observations without NA weight values\r\n  summarize(mean_weight_g = mean(weight_g, na.rm = TRUE),\r\n            sd_weight_g = sd(weight_g, na.rm = TRUE),\r\n            sample_size = sum(!is.na(weight_g)))\r\n  \r\n\r\n\r\n########## Format in kable\r\n\r\n#Rename column names\r\nhares_j_weights_sex_table %>% \r\n  \r\n  kable(col.names = c(\"Sex\",\r\n                      \"Mean (g)\",\r\n                      \"Standard Deviation (g)\",\r\n                      \"Sample Size\"),\r\n        \r\n        #Add caption\r\n        caption = c(\"Descriptive statistics (mean, standard deviation, sample size) for \r\n                    juvenile snowshoe hare weights (g) as a function of sex. Original \r\n                    sample sizes for male and female juvenile snowshoe hares in the \r\n                    dataset are *n* = 163 and *n* = 200, respectively. The sample size \r\n                    for female juvenile snowshoe hares used for statistical analyses was \r\n                    reduced to *n* = 197 after removing hares with no recorded weights. \r\n                    Data source: Kielland et al. (2017).\"),\r\n      \r\n        #Specify number of decimal places to keep\r\n        digits = 1) %>% \r\n  \r\n  #Add kable styling to center table and make it full width\r\n  kable_styling(position = \"center\", full_width = TRUE)\r\n\r\n\r\n\r\nTable 1: Descriptive statistics (mean, standard deviation, sample size) for juvenile snowshoe hare weights (g) as a function of sex. Original sample sizes for male and female juvenile snowshoe hares in the dataset are n = 163 and n = 200, respectively. The sample size for female juvenile snowshoe hares used for statistical analyses was reduced to n = 197 after removing hares with no recorded weights. Data source: Kielland et al. (2017).\r\n\r\n\r\nSex\r\n\r\n\r\nMean (g)\r\n\r\n\r\nStandard Deviation (g)\r\n\r\n\r\nSample Size\r\n\r\n\r\nFemale\r\n\r\n\r\n855.4\r\n\r\n\r\n292.3\r\n\r\n\r\n197\r\n\r\n\r\nMale\r\n\r\n\r\n945.9\r\n\r\n\r\n333.2\r\n\r\n\r\n163\r\n\r\n\r\nOn average, juvenile male snowshoe hares have heavier weights (M = 945.9 g, SD = \\(\\pm\\) 333.2 g, n = 163) than juvenile female snowshoe hares (M = 855.4 g, SD = \\(\\pm\\) 292.3 g, n = 197) (Table 1). The absolute difference in means is 90.5 g (about a 10% difference) and this difference is statistically significant (Welch’s two-sample t-test: t(325) = 2.7, p < 0). However, the magnitude of the effect size is small (Cohen’s d = 0.3), indicating that the effect may require further investigation. Thus, while there is a significant difference in weights between juvenile female and male snowshoe hares observed at Bonanza Creek, further metrics of comparisons would be required to determine the practical importance of this difference in mean weights.\r\nComparison Between Juvenille Weight & Hind Foot Length\r\n\r\n\r\nCode\r\n\r\n########## Exploratory\r\n\r\n#Exploratory plots for weight and hind foot length\r\n#Scatter plot, histogram, and correlation\r\nlm_explore <- hares_j %>% select(weight_g, hindft_mm) %>% \r\n  ggpairs()\r\n\r\n##Figures show that while weight is normally distributed \r\n##among all juvenile hares, the hind foot length is not. \r\n##The hind foot length distribution is negative or left-skewed \r\n##and appears to have two peaks.\r\n\r\n\r\n\r\n########## Construct linear regression model\r\n\r\n#Linear regression model\r\nhares_lm <- lm(weight_g ~ hindft_mm,\r\n               data = hares_j)\r\n\r\n#Tidy format\r\nhares_lm_tidy <- tidy(hares_lm)\r\nhares_lm_glance <- glance(hares_lm)\r\n\r\n#Pearson's correlation\r\nhares_cor <- cor.test(hares_j$weight_g, hares_j$hindft_mm)\r\n\r\n#Tidy format\r\nhares_cor_tidy <- tidy(hares_cor)\r\n\r\n\r\n\r\n########## Model diagnostics\r\n\r\n#Model diagnostic plots in 2x2 grid\r\n# par(mfrow = c(2,2))\r\n# plot(hares_lm)\r\n\r\n##First and third plots show that the there is a pattern \r\n##of heteroscedasticity, as the residuals of the model are \r\n##not constant throughout the x-axis value (weight). They do \r\n##not appear evenly or randomly distributed along the horizontal \r\n##dotted line.\r\n\r\n##Second plot shows the QQ plot which has a pattern in the \r\n##tail (S-shape pattern), meaning that the residuals are \r\n##not normally distributed\r\n\r\n##Fourth plot shows no individual observation that has \r\n##higher influence than others (no known outliers), which is \r\n##okay, but the other plots are concerns that the linear model \r\n##may require, as a starting point, other variables as covariates.\r\n\r\n\r\n\r\n########## Visualization\r\n\r\n#Scatter with line plot (used cleaned/renamed values dataframe)\r\nggplot(data = hares_j_weights, aes(x = hindft_mm,\r\n                                   y = weight_g)) +\r\n  \r\n  #Define point, \r\n  #Assign color and shape by sex\r\n  #Change size and transparency\r\n  geom_point(aes(color = sex, shape = sex),\r\n             size = 4.0, alpha = 0.65) +\r\n  \r\n  #Change shape of points\r\n  #Change legend name\r\n  scale_shape_manual(values = c(19, 17, 18),\r\n                      name = \"Sex\") +\r\n  \r\n  #Use RColorBrewer color palette to fill point\r\n  #Change legend name\r\n  scale_color_brewer(palette = \"Accent\",\r\n                     name = \"Sex\") +\r\n\r\n  #Add linear line \r\n  #Remove standard error confidence interval\r\n  #Change color of line\r\n  geom_smooth(method = \"lm\", \r\n              se = FALSE, color = \"grey30\") +\r\n  \r\n  #Change x-axis and y-axis labels\r\n  labs(x = \"\\nHind Foot Length (mm)\",\r\n       y = \"Weight (g)\\n\") +\r\n  \r\n  #Change theme\r\n  theme_minimal() +\r\n  \r\n  #Add custom theme\r\n  #Change legend position in plot\r\n  theme(legend.position = c(0.20, .70),\r\n        \r\n        #Change axes text size\r\n        axis.text = element_text(size = 11),\r\n        \r\n        #Change axes title size and make bold\r\n        axis.title = element_text(size = 12, face = \"bold\"))\r\n\r\n\r\n\r\n\r\nFigure 3. Relationship between weight (g) and hind foot length (mm) for each juvenile snowshoe hare sex with recorded data. Points indicate individual hare measurements (female = green circles; male = purple triangles; unknown = orange diamonds). Linear model summary: \\(\\beta_{1}\\) = 9.5 g/mm, p < .001, \\(R^2\\) = 0.3, Pearson’s r = 0.5). Data source: Kielland et al. (2017).\r\n\r\nAs a starting point, the relationship between hind foot length and weight was explored across sex (i.e., ignoring sex as a variable). Thus, further analysis is needed to compare the relationship between hind foot length and weight by sex, and should also include trap site as an additional variable.\r\nThe relationship between hind foot length and weight appears somewhat linear for juvenile snowshoe hares with recorded data, both across and within sex (Figure 3). Simple linear regression revealed that hind foot length significantly predicts juvenile snowshoe hare weight (F(1, 247) = 105.2, p < .001, \\(R^2\\) = 0.3), with an average slope of \\(\\beta\\) = 9.5 g/mm (i.e., for each one millimeter increase in hind foot length, we would expect an average increase in weight of 9.5 grams). The multiple \\(R^2\\) indicates that about 29.9% of the variance in body weight from the linear model is explained by hind foot length. Additionally, hind foot length and weight are moderately and significantly, positively correlated (Pearson’s r = 0.5, p < .001). Diagnostic plots (not included) reveal slightly non-normally distributed and heteroscedastic residuals for the linear model.\r\nThis suggests that despite the linear model being significant, there could be other methods or types of models to describe the association between juvenile hare weight and hind foot length rather than using a default linear relationship. The hares labeled as unknown sex have recorded low hind foot and low weight measurements that seem to be outliers that can skew the trend between the relationship of our two variables. When hind foot length is greater than 100 mm, weight appears to increase in grams at a more non-linear rate. Therefore, it might be useful to incorporate other variables in the model, such as sex, and consider non-linear types of models for this relationship between body weight and hind foot length.\r\nSummary\r\nExploratory data analysis reveals the following initial findings:\r\nThe highest count of juvenile hare trappings was observed in 1999 and counts for juvenile hare trappings decreased thereafter for subsequent years of the study\r\nVisualizing juvenile hare weights by sex and trap sites reveal possible differences in mean weights\r\nMale juvenile snowshoe hares have higher mean weights than female juvenile snowshoe hares. However, the effect size is small (Cohen’s d = 0.3) despite a significant difference in means\r\nHind foot length appears to be linearly related with weight for juvenile snowshoe hares, though diagnostic plots suggest using different a different model and/or adding covariates. The simple linear regression relationship is significant, with a slope (expected average increase in grams for weight with a one millimeter increase in hind foot length) of 9.52 g/mm\r\nFuture directions or next steps:\r\nCompare weights between juvenile female and male snowshoe hares using a non-parametric test (Mann-Whitney U test) to accomodate for violations of normality and equal variances\r\nConduct a one-way ANOVA to compare mean weights of juvenile hares between different trap sites\r\nRun a multiple linear regression model to understand the relationship between sex, trap site, hind foot length, and weight for juvenile hares\r\nReferences\r\nData and Literature\r\nFlora, B.K. (2002). Comparison of snowshoe hare populations in interior Alaska (Doctoral dissertation). https://scholarworks.alaska.edu/handle/11122/6245.\r\nKielland, K., Chapin, F.S., Ruess, R.W., & Bonanza Creek LTER. (2017). Snowshoe hare physical data in Bonanza Creek Experimental Forest: 1999-Present ver 22. Environmental Data Initiative. https://doi.org/10.6073/pasta/03dce4856d79b91557d8e6ce2cbcdc14.\r\nKielland, K., Olson, K., & Euskirchen, E. (2010). Demography of snowshoe hares in relation to regional climate variability during a 10-year population cycle in interior Alaska. Canadian Journal of Forest Research, 40(7), 1265-1272. https://doi.org/10.1139/X10-053.\r\nR Libraries\r\nFox, J. & Weisberg, S. (2019). An {R} Companion to Applied Regression, Third Edition. Thousand Oaks CA: Sage. URL: https://socialsciences.mcmaster.ca/jfox/Books/Companion/.\r\nGrolemund, G. & Wickham, H. (2011). Dates and Times Made Easy with lubridate. Journal of Statistical Software, 40(3), 1-25. URL https://www.jstatsoft.org/v40/i03/.\r\nMüller, K. (2020). here: A Simpler Way to Find Your Files. R package version 1.0.1. https://CRAN.R-project.org/package=here.\r\nNeuwirth, E. (2014). RColorBrewer: ColorBrewer Palettes. R package version 1.1-2. https://CRAN.R-project.org/package=RColorBrewer.\r\nRobinson, D., Hayes, A., & Couch, S. (2021). broom: Convert Statistical Objects into Tidy Tibbles. R package version 0.7.9. https://CRAN.R-project.org/package=broom.\r\nSchloerke, B., Cook, D., Larmarange, J., Briatte, F., Marbach, M., Thoen, E., Elberg, A., & Crowley, J. (2021). GGally: Extension to ‘ggplot2’. R package version 2.1.2. https://CRAN.R-project.org/package=GGally.\r\nTorchiano, M. (2020). effsize: Efficient Effect Size Computation. doi: 10.5281/zenodo.1480624, R package version 0.8.1, https://doi.org/10.5281/zenodo.1480624.\r\nWickham et al., (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686, https://doi.org/10.21105/joss.01686.\r\nZhu, H. (2021). kableExtra: Construct Complex Table with ‘kable’ and Pipe Syntax. R package version 1.3.4. https://CRAN.R-project.org/package=kableExtra.\r\n\r\n\r\n\r\n",
    "preview": "portfolio/regression_snowshoe_hares/regression_snowshoe_hares_files/figure-html5/lm_explore_model-1.png",
    "last_modified": "2022-03-18T20:08:15-07:00",
    "input_file": {}
  }
]
