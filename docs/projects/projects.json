[
  {
    "path": "projects/logistic_regression_palemtto/",
    "title": "Binary Logistic Regression: Classifying Florida Palmetto Species",
    "description": "In this project, I explored Florida palmetto data through exploratory visualizations and used binary logistic regression to classify palmetto species.",
    "author": [
      {
        "name": "Shuying Yu",
        "url": {}
      }
    ],
    "date": "2022-02-11",
    "categories": [
      "Logistic Regression",
      "R"
    ],
    "contents": "\r\n\r\nContents\r\nIntroduction\r\nResearch Question\r\nData and Methods\r\nResults\r\nExploratory Data Visualizations\r\nBinary Logistic Regression Model\r\nModel Comparison Using AIC\r\nFinal Model Selection\r\nClassification Accuracy of Final Model\r\n\r\nSummary\r\nReferences\r\nData and Literature\r\nR Libraries\r\n\r\n\r\nIntroduction\r\nIn this project, I used binary logistic regression to classify Florida palmetto species as either Serenoa repens or Sabal etonia using physical measurements of the plants. Exploratory data analysis was performed and two logistic regression models were built. Accuracy was used as a metric for which model was better in classifying palmetto species.\r\nResearch Question\r\nCan we correctly classify whether a palemtto species is either Serenoa repens or Sabal etonia? For binary logistic regression, we want to investigate whether the model can classify whether a palmetto belongs to species Serenoa repens or Sabal etonia using the variables plant height (cm), canopy length (cm), canopy width (cm), and number of green leaves. In other words, we want to investigate whether the model can significantly predict our outcome variable, palmetto species.\r\nNull hypothesis (\\(H_0\\)): The model does not significantly predict the log odds of species being equal to Serenoa repens. The \\(\\beta_j\\) coefficients are equal to zero for each \\(j\\text{th}\\) predictor variable.\r\nAlternative hypothesis (\\(H_1\\)): At least one of the predictors or explanatory variables significantly predicts the log odds of species being equal to Serenoa repens. At least one of the \\(\\beta_j\\) coefficients in the model is not equal to zero.\r\nData and Methods\r\nPalmetto plant species Serenoa repens and Sabal etonia were observed from the years 1981 - 2017 at the Archbold Biological Station in south-central Florida and made publicly available by Dr.Â Warren Abrahamson (Abrahamson, 2019). Seedlings were planted and survival, growth, and biomass of the two species of plants were measured. Maximum height (cm), widest length of the canopy (cm), widest width of the canopy (cm), and the number of green leaves were among the physical measurements of plant growth that were recorded.\r\nFollowing exploratory data visualizations, the relationship between species and other recorded measurements were investigated by binary logistic regression. 10-fold cross-validation was performed, and accuracy and AIC were used as metrics to compare two different models and choose the model with better performance. Sample size and proportion of species correctly classified by the final model are reported. All analyses were conducted in R version 4.1.1 and RStudio version 1.4.1717.\r\n\r\n\r\nCode\r\n\r\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE,\r\n                      fig.align = \"center\")\r\n\r\n#Attach libraries\r\nlibrary(tidyverse)\r\nlibrary(here)\r\nlibrary(broom)\r\nlibrary(AICcmodavg)\r\nlibrary(kableExtra)\r\nlibrary(ggtext)\r\nlibrary(patchwork)\r\n\r\n\r\n\r\nResults\r\nExploratory Data Visualizations\r\n\r\n\r\nCode\r\n\r\n#Read in the data \r\npalmetto <- read_csv(here(\"_projects\", \"data\", \"palmetto.csv\"))\r\n\r\n\r\n#Clean the data\r\npalmetto <- palmetto %>% \r\n  \r\n  #Select relevant variables\r\n  select(height:green_lvs, species) %>% \r\n  \r\n  #Recode species vairable\r\n  #1 = Serenoa repens, 2 = Sabal etonia\r\n  mutate(species = case_when(species == 1 ~ \"Serenoa repens\",\r\n                             species == 2 ~ \"Sabal etonia\")) %>% \r\n  \r\n  #Change species as factor\r\n  mutate(species = as.factor(species)) %>% \r\n  \r\n  #Reame variables to add units\r\n  rename(height_cm = height,\r\n         length_cm = length,\r\n         width_cm = width,\r\n         green_leaves = green_lvs)\r\n\r\n\r\n\r\n\r\n\r\nCode\r\n\r\n### Plot 1: height and length marginal distributions\r\n\r\n#Define color palette\r\npalmetto_colors <- c(\"slateblue1\", \"skyblue1\") \r\n\r\n#Create scatterplot and marginal distributions\r\nggplot(data = palmetto, \r\n       aes(x = length_cm, y = height_cm, \r\n           color = species)) +\r\n  \r\n  #Define scatter\r\n  geom_point(alpha = 0.50, size = 2) + \r\n  \r\n  #Change colors\r\n  scale_colour_manual(values = palmetto_colors) +\r\n  \r\n  #Change theme\r\n  theme_minimal() +\r\n  \r\n  #Change x-axis and y-axis labels\r\n  #Change legend title\r\n  labs(x = \"Canopy Length (cm)\",\r\n       y = \"Height (cm)\",\r\n       color = \"Species\") +\r\n  \r\n  #Change legend position\r\n  theme(legend.position = c(0.8, 0.15),\r\n        \r\n        #Bold title of legend\r\n        legend.title = element_text(face = \"bold\"),\r\n        \r\n        #Bold x-axis and y-axis label text, change size\r\n        axis.title = element_text(face = \"bold\", size = 11))\r\n\r\n\r\n\r\n\r\nFigure 1. Canopy length (cm) plotted by plant height (cm) for each individual palmetto plant species, Sabal etonia (purple points) and Serenoa repens (blue points). Data source: Abrahamson, 2019.\r\n\r\n\r\n\r\nCode\r\n\r\n### Plot 2: Histogram of leaves by species\r\n\r\n#Get mean of leaves by species\r\npalmetto_leaves <-  palmetto %>% \r\n  select(species, green_leaves) %>% \r\n  group_by(species) %>% \r\n  summarize(avg_leaves = mean(green_leaves, na.rm = TRUE))\r\n\r\n\r\n#Bar plot\r\nggplot(data = palmetto, aes(x = green_leaves,\r\n                            fill = species)) +\r\n  \r\n  #Define histogram\r\n  #Fill with same colors and allow overlap\r\n  geom_histogram(alpha = 0.60, position = \"dodge\") +\r\n  \r\n  #Change colors\r\n  scale_color_manual(values = palmetto_colors) +\r\n  scale_fill_manual(values = palmetto_colors) +\r\n  \r\n  #Change theme\r\n  theme_minimal() +\r\n  \r\n  #Change x-axis and y-axis labels\r\n  labs(x = \"Number of Green Leaves\",\r\n       y = \"Count\",\r\n       fill = \"Species\") +\r\n  \r\n  #Change legend position inside plot\r\n  theme(legend.position = c(.80, .80),\r\n        \r\n        #Bold title\r\n        legend.title = element_text(face = \"bold\"),\r\n        \r\n        #Bold x-axis and y-axis label text, change size\r\n        axis.title = element_text(face = \"bold\", size = 11))\r\n\r\n\r\n\r\n\r\nFigure 2. Histogram plots show the frequency of the number of green leaves counted per plant for each palmetto plant species, Sabal etonia (purple bars) and Serenoa repens (blue bars). Data source: Abrahamson, 2019.\r\n\r\n\r\n\r\nCode\r\n\r\n### Plot 3: Check width of species\r\n\r\n#Beeswaram boxplot\r\nggplot(data = palmetto, aes(x = species,\r\n                            y = width_cm,\r\n                            fill = species)) +\r\n  \r\n  #Define violin plot\r\n  #Change color fill to species, remove legend\r\n  geom_violin(alpha = 0.5, show.legend = FALSE) +\r\n\r\n  \r\n  #Add median point, change size and color\r\n  #Remove legend\r\n  stat_summary(fun = median, geom = \"point\", \r\n               size = 3, color = \"black\",\r\n               show.legend = FALSE) +\r\n  \r\n  #Change x-axis and y-axis labels\r\n  labs(x = \"Palmetto Species \\n\",\r\n       y = \"Canopy Width (cm) \\n\") +\r\n  \r\n  #Use color palette to fill boxplot\r\n  scale_fill_manual(values = palmetto_colors) +\r\n  \r\n  #Use color palette to fill jitter points\r\n  scale_color_manual(values = palmetto_colors) +\r\n\r\n  #Change theme\r\n  theme_classic() +\r\n  \r\n  #Add break in species names\r\n  scale_x_discrete(labels = c(\"Sabal etonia\", \"Serenoa repens\")) +\r\n  \r\n  #Italicize latin names for species\r\n  theme(axis.text.x = element_text(face = \"italic\", size = 11),\r\n        \r\n        #Bold x-axis and y-axis label text, change size\r\n        axis.title = element_text(face = \"bold\", size = 11))\r\n\r\n\r\n\r\n\r\nFigure 3. Violin plots for the distribution of canopy width (cm) for each palmetto species, Sabal etonia (purple) and Serenoa repens (blue). The violin plot outlines illustrate the kernel probability density such that the width of the shaded area represents the proportion of the data located there. The black point within the violin plot indicates the median width for each species. Data source: Abrahamson, 2019.\r\n\r\nInitial exploration of the data reveals certain physical traits between the two palmetto species. Height between the two species appear similar, but the Sereona repens plant species seem to have shorter canopy length (Figure 1). There is also a difference in the number of green leaves measured, with Sereona repens plants having larger range and variance with an average of 7.5 green leaves counted (Figure 2). The majority of Sabal etonia plants have on average 4.02 green leaves, and the variance appears smaller. For the final exploratory plot, the canopy width was examined between the species and their respective width distribution and median width appear to be similar (Figure 3). Based on these plots, plant height and number of green leaves are the most likely to be helpful in classifying palmetto species correctly.\r\nBinary Logistic Regression Model\r\nWe will build two binary logistic regression models to determine the probability of a plant being either Serenoa repens or Sabal etonia based on several predictor variables.\r\nModel 1: Log odds of palmetto species being Serenoa repens using plant height, canopy length, canopy width, and number of green leaves as predictor variables\r\nModel 2: Log odds of palmetto species being Serenoa repens using plant height, canopy width, and number of green leaves as predictor variables\r\n\r\n\r\n\r\nCode\r\n\r\n########## Build the models ##########\r\n\r\n### Model 1\r\n\r\n#Define model with formula\r\nfx1 <- species ~ height_cm + length_cm + width_cm + green_leaves\r\n\r\n#Create model\r\n#Sabal etonia is reference\r\nmod1 <- glm(formula = fx1, data = palmetto,\r\n            family = \"binomial\")\r\n\r\n\r\n### Model 2\r\n\r\n#Define model with formula\r\nfx2 <- species ~ height_cm + width_cm + green_leaves\r\n\r\n#Create model\r\n#Sabal etonia is reference\r\nmod2 <- glm(formula = fx2, data = palmetto,\r\n            family = \"binomial\")\r\n\r\n\r\n\r\n########## K-fold cross-validation ##########\r\n\r\n### Define parameters\r\n\r\n#Set seed\r\nset.seed(244)\r\n\r\n#10 fold, k=10\r\nn_folds <- 10\r\n\r\n#Create vector whose length is same as number of rows in our df\r\nfold_vec <- rep(1:n_folds, length.out = nrow(palmetto))\r\n\r\n#Randomize\r\n#Assign new column the number from fold_vec (repeats of 1-10)\r\n#Each group of 10 gets assigned a number 1-10, to divide folds into 10\r\npalmetto_fold <- palmetto %>% \r\n  mutate(fold = sample(fold_vec, size = n()))\r\n\r\n\r\n### Prediction accuracy function\r\n\r\npred_acc <- function(x, y) {\r\n  accurate <- ifelse(x == y, 1, 0)\r\n  return(mean(accurate, na.rm = TRUE))\r\n}\r\n\r\n\r\n### Run cross-validation\r\n\r\n#Create empty dataframe \r\nresults_df <- data.frame()\r\n\r\n#Loop 10 folds for cross-validation\r\nfor(i in 1:n_folds){\r\n  \r\n  \r\n  #Create test and training sets\r\n  #90/10, train/test\r\n  kfold_test_df <- palmetto_fold %>% \r\n    filter(fold_vec == i)\r\n  kfold_train_df <- palmetto_fold %>% \r\n    filter(fold_vec != i)\r\n  \r\n  \r\n  #Train the 2 models on training set\r\n  kfold_model1 <- glm(formula = fx1, data = kfold_train_df,\r\n                      family = \"binomial\")\r\n  kfold_model2 <- glm(formula = fx2, data = kfold_train_df,\r\n                      family = \"binomial\")\r\n  \r\n  \r\n  #Test df\r\n  #Based on new model, use that to predict whether it is S.repens or not\r\n  kfold_pred <- kfold_test_df %>% \r\n    mutate(blr1 = predict(kfold_model1,\r\n                          kfold_test_df,\r\n                          type = \"response\"),\r\n           blr2 = predict(kfold_model2,\r\n                          kfold_test_df,\r\n                          type = \"response\")) %>% \r\n    \r\n    #Add a new column for predicted sepecies\r\n    mutate(pred1 = ifelse(blr1 > 0.50,\r\n                          \"Serenoa repens\", \"Sabal etonia\"),\r\n           pred2 = ifelse(blr2 > 0.50,\r\n                          \"Serenoa repens\", \"Sabal etonia\"))\r\n  \r\n  #Accuracy between true species and predicted species\r\n  #Use predict accuracy function\r\n  kfold_accuracy <- kfold_pred %>% \r\n    summarize(blr1_acc = pred_acc(species, pred1),\r\n              blr2_acc = pred_acc(species, pred2))\r\n  \r\n  #Combine accuracy to results df\r\n  results_df <- bind_rows(results_df,\r\n                          kfold_accuracy)\r\n  \r\n}\r\n\r\n########## Check mean accuracy of each model ##########\r\n\r\n#Mean accuracy\r\nacc_table <- results_df %>%\r\n  \r\n  #Get mean of accuracy\r\n  summarize(blr1_acc = mean(blr1_acc),\r\n            blr2_acc = mean(blr2_acc)) \r\n\r\n#Add row name\r\nrownames(acc_table) <- c(\"Mean Prediction Accuracy\")\r\n\r\n#Style in kable\r\nacc_table %>% \r\n  \r\n  #Change column names\r\n  kable(col.names = c(\"Model 1\", \"Model 2\"), \r\n        \r\n        caption = \"<b><\/b> Average prediction accuracy of palmetto species for Model 1 and Model 2 from 10-fold cross-validation. Model 1 includes all predictors (plant height, canopy width, canopy length, and number of green leaves) while Model 2 excludes canopy length from the model. Data source: Abrahamson, 2019.\",\r\n  \r\n        #Align all cells/columns to center\r\n        align = c(rep(\"c\", times = 3)),\r\n        \r\n        #Round digits to 2\r\n        digits = 2,\r\n        \r\n        #HTML post format\r\n        escape = FALSE,\r\n        format = \"html\",\r\n        \r\n        #Change width of table\r\n        table.attr = \"style='width:60%;'\") %>% \r\n\r\n   kable_styling(full_width = TRUE,\r\n                 position = \"center\")\r\n\r\n\r\n\r\nTable 1:  Average prediction accuracy of palmetto species for Model 1 and Model 2 from 10-fold cross-validation. Model 1 includes all predictors (plant height, canopy width, canopy length, and number of green leaves) while Model 2 excludes canopy length from the model. Data source: Abrahamson, 2019.\r\n\r\n\r\n\r\n\r\nModel 1\r\n\r\n\r\nModel 2\r\n\r\n\r\nMean Prediction Accuracy\r\n\r\n\r\n0.91\r\n\r\n\r\n0.89\r\n\r\n\r\nWe perform k-fold cross-validation with \\(k = 10\\) folds for each model. Model 1 with all the predictors in the model has a higher mean accuracy (91.04%) in classifying palmetto species than Model 2 (89.31%) (Table 1).\r\nModel Comparison Using AIC\r\nWe can use the Akaike information criterion (AIC) as an additional metric to compare the fit of our binary logistic regression models. AIC is calculated as:\r\n\\[\\text{AIC}=2Kâ2ln(L)\\]\r\nwhere K is the number of model parameters (default is 2), and \\(ln(L)\\) is the log-likelihood of the model. The log-likelihood tells us how likely the model is given the data we use.\r\n\r\n\r\n\r\nCode\r\n\r\n########## AICc ##########\r\n\r\n#Compare AIC of model 1 and model 2\r\naic <- AIC(mod1, mod2)\r\n\r\n#Allows to compare 2 model values at once here\r\n#Gives K, delta AICc... lists best model first\r\naictable <- AICcmodavg::aictab(list(mod1, mod2))\r\n\r\n#Rename model names in column\r\naictable$Modnames <- c(\"Model 1\", \"Model 2\")\r\n\r\n########## Create finalized table ##########\r\n\r\naictable %>% \r\n  \r\n  #Use kable to make nice format\r\n  kable(col.names = c(\"Model Name\", \"*K*\",\r\n        \"AIC (corrected)\", \"Change in AIC (corrected)\", \"Model Likelihood\", \"AIC (corrected) Weight\", \"Log-Likelihood\", \"Cumulative Weight\"),\r\n        \r\n        #Add caption\r\n        caption = \"<b><\/b> Statistics for the AIC table between Model 1 and Model 2, which includes the number of parameters in the model, the corrected AIC value, the difference in AIC value between the best model compared to the current model, proportion of total predictive power found in the model (%), the log-likelihood of the model, and finally the cumulative sum of the AIC weights. Data source: Abrahamson, 2019.\",\r\n        \r\n        #Align all cells/columns to center\r\n        align = c(rep(\"c\", times = 8)),\r\n        \r\n        #Round digits to 2\r\n        digits = 2,\r\n        \r\n        #HTML post format\r\n        escape = FALSE,\r\n        format = \"html\") %>% \r\n  \r\n  #Make full width\r\n  kable_styling(full_width = TRUE, position = \"center\") \r\n\r\n\r\n\r\nTable 2:  Statistics for the AIC table between Model 1 and Model 2, which includes the number of parameters in the model, the corrected AIC value, the difference in AIC value between the best model compared to the current model, proportion of total predictive power found in the model (%), the log-likelihood of the model, and finally the cumulative sum of the AIC weights. Data source: Abrahamson, 2019.\r\n\r\n\r\nModel Name\r\n\r\n\r\nK\r\n\r\n\r\nAIC (corrected)\r\n\r\n\r\nChange in AIC (corrected)\r\n\r\n\r\nModel Likelihood\r\n\r\n\r\nAIC (corrected) Weight\r\n\r\n\r\nLog-Likelihood\r\n\r\n\r\nCumulative Weight\r\n\r\n\r\nModel 1\r\n\r\n\r\n5\r\n\r\n\r\n5194.57\r\n\r\n\r\n0.00\r\n\r\n\r\n1\r\n\r\n\r\n1\r\n\r\n\r\n-2592.28\r\n\r\n\r\n1\r\n\r\n\r\nModel 2\r\n\r\n\r\n4\r\n\r\n\r\n5987.48\r\n\r\n\r\n792.91\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n-2989.74\r\n\r\n\r\n1\r\n\r\n\r\nWe used AIC model selection to distinguish among two possible models describing the relationship between the log odds of palmetto species being Sereona repens using plant height, canopy length, canopy width, and number of green leaves as predictor variables. Here, Model 1 (K: 5, AIC: 5194.57) has a lower AIC value than Model 2 (K: 4, AIC: 5987.48) (Table 2). Thus, the better fitting model is Model 1, carrying majority of the cumulative model weight, and includes all the covariates with no interaction effects. The \\(\\Delta\\)AIC is 792.91, which is the difference in AIC score between the model being compared (Model 2) and the better performing model (Model 1).\r\nThus, according to our mean prediction accuracy and AIC measures, Model 1 with all four predictor variables is the better model. We will select this as the final model and train the model on the entire dataset.\r\nFinal Model Selection\r\n\r\n\r\nCode\r\n\r\n#Final model using all predictors\r\nblr_final <- glm(species ~ ., \r\n                 data = palmetto, \r\n                 family = \"binomial\")\r\n\r\n#Make into tidy format\r\nblr_final_tidy <- broom::tidy(blr_final)\r\n\r\n#Change row term names for kable\r\nblr_final_tidy_kable <- blr_final_tidy\r\nblr_final_tidy_kable$term <- c(\"(Intercept)\", \"Height (cm)\",\r\n                               \"Length (cm)\", \"Width (cm)\", \"Green Leaves\")\r\n\r\n#Change p-value so it writes \"< 0.001\" in kableExtra table\r\nblr_final_tidy_kable$p.value <- ifelse(blr_final_tidy_kable$p.value < 0.001,\r\n                                       paste(\"< 0.001\"),\r\n                                       paste(\"=\", blr_final_tidy_kable$p.value))\r\n\r\n\r\n#Use kableExtra to format into nice table\r\nblr_final_tidy_kable %>% \r\n  \r\n  #Change column and row names\r\n  kable(col.names = c(\"Predictor Variable\", \"Coefficient\",\r\n                      \"Standard Error\", \"*Z*-value\", \"*p*-value\"),\r\n        #Add caption\r\n        caption = \"<b><\/b> Binary logistic regression results for the log odds of palmetto species being *Serenoa repens*. The four predictor variables plant height (cm), canopy length (cm), canopy width (cm), and number of green leaves are shown on the left column and model summary statistics are on the right columnns, reporting the $\\\\beta$ coefficients, standard errors, *Z*-values, and *p*-values. Data source: Abrahamson, 2019.\",\r\n        \r\n        #Align all cells/columns to center\r\n        align = c(rep(\"c\", times = 5)),\r\n        \r\n        #Round digits to 2\r\n        digits = 2,\r\n        \r\n        #HTML post format\r\n        escape = FALSE,\r\n        format = \"html\") %>%\r\n  \r\n  #Make full width and add hover to rows\r\n  kable_styling(full_width = TRUE,\r\n                position = \"center\",\r\n                bootstrap_options = \"hover\")\r\n\r\n\r\n\r\nTable 3:  Binary logistic regression results for the log odds of palmetto species being Serenoa repens. The four predictor variables plant height (cm), canopy length (cm), canopy width (cm), and number of green leaves are shown on the left column and model summary statistics are on the right columnns, reporting the \\(\\beta\\) coefficients, standard errors, Z-values, and p-values. Data source: Abrahamson, 2019.\r\n\r\n\r\nPredictor Variable\r\n\r\n\r\nCoefficient\r\n\r\n\r\nStandard Error\r\n\r\n\r\nZ-value\r\n\r\n\r\np-value\r\n\r\n\r\n(Intercept)\r\n\r\n\r\n-3.23\r\n\r\n\r\n0.14\r\n\r\n\r\n-22.71\r\n\r\n\r\n< 0.001\r\n\r\n\r\nHeight (cm)\r\n\r\n\r\n0.03\r\n\r\n\r\n0.00\r\n\r\n\r\n12.67\r\n\r\n\r\n< 0.001\r\n\r\n\r\nLength (cm)\r\n\r\n\r\n-0.05\r\n\r\n\r\n0.00\r\n\r\n\r\n-24.56\r\n\r\n\r\n< 0.001\r\n\r\n\r\nWidth (cm)\r\n\r\n\r\n-0.04\r\n\r\n\r\n0.00\r\n\r\n\r\n-18.78\r\n\r\n\r\n< 0.001\r\n\r\n\r\nGreen Leaves\r\n\r\n\r\n1.91\r\n\r\n\r\n0.04\r\n\r\n\r\n49.11\r\n\r\n\r\n< 0.001\r\n\r\n\r\nThe better performing and final model reveals that all \\(\\beta\\) coefficients are statistically significant (p < 0.001) (Table 3.). Thus, we would reject the null hypothesis that \\(\\beta_j\\) coefficients are equal to zero for each \\(j\\text{th}\\) predictor variable. The final model is written as:\r\n\\[\\small\r\n\\begin{aligned}\r\nln \\biggl( \\frac{P(\\widehat{\\text{species} = \\mathit{Serenoa \\ repens}})}{1 - P(\\widehat{\\text{species} = \\mathit{Serenoa \\ repens}})} \\biggr) = -3.23 + 0.03(\\text{Height}) - 0.05(\\text{Length}) - 0.04(\\text{Width}) + 1.91(\\operatorname{Green \\ Leaves})\r\n\\end{aligned}\\]\r\n\r\n\r\nCode\r\n\r\n########## Fit model to make predictions ##########\r\n\r\n##Take log odds and convert to probability\r\n#Get predicted probabilities of each plant being classified as Serenoa repens\r\nblr_fitted <- blr_final %>% \r\n  broom::augment(type.predict = \"response\") \r\n\r\n\r\n#Add column for what species the model predicted\r\nblr_fitted <- blr_fitted %>%\r\n  \r\n  #Create new column for predicted species\r\n  #Lower probability = Sabal etonia (< 50%)\r\n  #Higher probability = Serenoa repens (>= 50%)\r\n  mutate(species_predicted = case_when(.fitted >= 0.50 ~ \"Serenoa repens\",\r\n                                       .fitted < 0.50 ~ \"Sabal etonia\")) \r\n\r\n\r\n\r\n#Plot logistic regression fitted plots for green leaves\r\nggplot(data = blr_fitted, aes(x = green_leaves, \r\n                              y = .fitted)) + \r\n  \r\n  #Color points by species, change transparency and size\r\n  #Remove legend\r\n  geom_point(aes(color = species), alpha = 0.50, size = 2) +\r\n  \r\n  #Plot logistic regression curve, remove standard error\r\n  stat_smooth(method = \"glm\", se = FALSE, \r\n              method.args = list(family=binomial),\r\n              size = 1.3, color = \"grey12\") +\r\n  \r\n  #Change color\r\n  scale_color_manual(values = palmetto_colors) +\r\n  \r\n  #Change x-axis and y-axis labels\r\n  labs(x = \"Number of Green Leaves\",\r\n       y = \"Probability of Species being *Sereona repens*\",\r\n       color = \"Species\") +\r\n  \r\n  #Change theme\r\n  theme_minimal() +\r\n  \r\n  #Add custom theme\r\n  #Make y-label part italic in rendered markdown\r\n  theme(axis.title.y = ggtext::element_markdown(),\r\n        \r\n        #Change position of legend\r\n        legend.position = c(.81, .30),\r\n        \r\n        #Bold title of legend\r\n        legend.title = element_text(face = \"bold\"),\r\n        \r\n        #Bold x-axis and y-axis label text, change size\r\n        axis.title = element_text(face = \"bold\", size = 11))\r\n\r\n\r\n\r\n\r\nFigure 4. Fitted logistic regression curve of the chosen model for the observed species, Sereona repens (blue points) and Sabal etonia (purple points), with probabilities of a palmetto species being Sereona repens and using number of green leaves as a predictor variable. Data source: Abrahamson, 2019.\r\n\r\nAll else being equal, the odds of a palmetto species being Sereona repens increases by a multiplicative factor of \\(e^{0.03} = 1.03\\) for every 1 centimeter increase in plant height. The odds of a species being Sereona repens decreases by a multiplicative factor of \\(e^{-0.05} = 0.95\\) for every 1 centimeter increases in canopy length. This means the the odds are about 5% less likely for the plant to be Sereona repens. Similarly, every 1 centimeter increase in canopy width leads to a decrease in the odds of species being Sereona repens by a multiplicative factor of \\(e^{-0.04} = 0.96\\). Finally, the odds of a species being Sereona repens to increase by a multiplicative factor of \\(e^{1.91} = 6.75\\) for every additional count of green leaves on the plant. Probabilities for Sereona repens are higher when observations report greater number of green leaves (Figure 4), otherwise probabilities are lower and likely to be Sabal etonia. This indicates that the number of green leaves on the plant is one of the best predictor variables for classifying palmetto species.\r\nClassification Accuracy of Final Model\r\n\r\n\r\nCode\r\n\r\n#Get total counts\r\nfinal_counts <- blr_fitted %>% \r\n  \r\n  #Use `across()` to obtain counts for variables that contian \"species\" name\r\n  count(across(contains(\"species\"))) \r\n\r\n\r\n\r\n########## Construct table for % classified ##########\r\n\r\n#Construct final table\r\nfinal_counts_table <- final_counts %>% \r\n  \r\n  #Make correct/incorrect label\r\n  mutate(classification_label = case_when(\r\n    (species == \"Sabal etonia\" & species_predicted == \"Sabal etonia\") ~ \"Correct\",\r\n    (species == \"Serenoa repens\" & species_predicted == \"Serenoa repens\") ~ \"Correct\",\r\n    (species == \"Sabal etonia\" & species_predicted == \"Serenoa repens\") ~ \"Incorrect\",\r\n    (species == \"Serenoa repens\" & species_predicted == \"Sabal etonia\") ~ \"Incorrect\"\r\n  )) %>% \r\n  \r\n  #Remove irrelevant variable\r\n  select(-species_predicted) %>% \r\n  \r\n  #Group by species and correctness\r\n  group_by(species, classification_label) %>% \r\n  \r\n  #Make wide format\r\n  pivot_wider(names_from = classification_label,\r\n              values_from = n) %>% \r\n  \r\n  #Make new column for percent correct\r\n  mutate(correct_pct = (Correct / (Correct + Incorrect)) * 100)\r\n\r\n\r\n\r\n########## Present table using kableExtra ##########\r\n\r\nfinal_counts_table %>% \r\n  \r\n  #Change column names\r\n  kable(col.names = c(\"Palmetto Species\", \"Sample Correctly Classified\",\r\n                      \"Sample Incorrectly Classified\", \"% Correctly Classified\"),\r\n        \r\n        caption = \"<b><\/b> Sample size and percentage of *Serenoa repens* and *Sabal etonia* palmettos correctly or incorrectly classified by our binary logistic regression model using four predictor variables (plant height, canopy length, canopy width, and number of green leaves). Threshold for classification of *Serenoa repens* species was having a predicted probability of 50% or greater. Data source: Abrahamson, 2019.\",\r\n        \r\n        #Align all cells/columns to center\r\n        align = c(\"l\", rep(\"c\", times = 3)),\r\n        \r\n        #HTML post format\r\n        escape = FALSE,\r\n        format = \"html\") %>% \r\n  \r\n  #Not make full width\r\n  kable_styling(full_width = TRUE,\r\n                position = \"center\") %>% \r\n  \r\n  #Make species italic\r\n  column_spec(1, italic = TRUE, bold = TRUE)\r\n\r\n\r\n\r\nTable 4:  Sample size and percentage of Serenoa repens and Sabal etonia palmettos correctly or incorrectly classified by our binary logistic regression model using four predictor variables (plant height, canopy length, canopy width, and number of green leaves). Threshold for classification of Serenoa repens species was having a predicted probability of 50% or greater. Data source: Abrahamson, 2019.\r\n\r\n\r\nPalmetto Species\r\n\r\n\r\nSample Correctly Classified\r\n\r\n\r\nSample Incorrectly Classified\r\n\r\n\r\n% Correctly Classified\r\n\r\n\r\nSabal etonia\r\n\r\n\r\n5701\r\n\r\n\r\n454\r\n\r\n\r\n92.62388\r\n\r\n\r\nSerenoa repens\r\n\r\n\r\n5548\r\n\r\n\r\n564\r\n\r\n\r\n90.77225\r\n\r\n\r\nFinally, we can evaluate how successfully this model would classify a plant as the correct species, using a 50% cutoff. The binary logistic regression model using four predictor variables (plant height, canopy length, canopy width, and number of green leaves) was successful over about 90% of the time in correctly classifying whether a palmetto species is either Serenoa repens or Sabal etonia.\r\nSummary\r\nIn conclusion, we have constructed and trained a binary logistic regression model that performs well in classifying palmetto species using physical attributes of the plant, which includes the plant height, canopy length, canopy width, and number of green leaves.\r\nVisualizing physical measurements between the two species show possible variables that would be informative for helping with model prediction\r\nModel metrics (prediction accuracy from k-fold cross-validation and AIC) reveal that the better performing model is one that includes all four predictor variables\r\nUsing a 50% probability threshold and the full dataset, the final model correctly classifies palmetto species at least 90% of the time\r\nReferences\r\nData and Literature\r\nAbrahamson, W.G. (2019). Survival, growth and biomass estimates of two dominant palmetto species of south-central Florida from 1981 - 2017, ongoing at 5-year intervals ver 1. Environmental Data Initiative. https://doi.org/10.6073/pasta/f2f96ec76fbbd4b9db431c79a770c4d5\r\nR Libraries\r\nMazerolle, M.J. (2020) AICcmodavg: Model selection and multimodel inference based on (Q)AIC(c). R package version 2.3-1. https://cran.r-project.org/package=AICcmodavg.\r\nMÃ¼ller, K. (2020). here: A Simpler Way to Find Your Files. R package version 1.0.1. https://CRAN.R-project.org/package=here.\r\nPedersen, T.L. (2020). patchwork: The Composer of Plots. R package version 1.1.1. https://CRAN.R-project.org/package=patchwork\r\nRobinson, D., Hayes, A., & Couch, S. (2021). broom: Convert Statistical Objects into Tidy Tibbles. R package version 0.7.9. https://CRAN.R-project.org/package=broom.\r\nWickham et al., (2019). Welcome to the tidyverse. Journal of Open Source Software, 4(43), 1686, https://doi.org/10.21105/joss.01686.\r\nWilke, C.O. (2020). ggtext: Improved Text Rendering Support for âggplot2â. R package version 0.1.1. https://CRAN.R-project.org/package=ggtext\r\nZhu, H. (2021). kableExtra: Construct Complex Table with âkableâ and Pipe Syntax. R package version 1.3.4. https://CRAN.R-project.org/package=kableExtra.\r\n\r\n\r\n\r\n",
    "preview": "projects/logistic_regression_palemtto/logistic_regression_palmetto_files/figure-html5/fig1_explore-1.png",
    "last_modified": "2022-02-11T19:44:34-08:00",
    "input_file": {}
  },
  {
    "path": "projects/snag_behavior/",
    "title": "Behavioral and Spatial Data Analysis: Aging and Sex Differences in Spatial Navigation",
    "description": "In this project, I investigated age-related changes and sex differences in spatial navigation performance between young and midlife adults.",
    "author": [
      {
        "name": "Shuying Yu",
        "url": {}
      }
    ],
    "date": "2022-01-29",
    "categories": [],
    "contents": "\r\nThis project post is a work in progress.\r\nDistill is a publication format for scientific and technical writing, native to the web.\r\nLearn more about using Distill at https://rstudio.github.io/distill.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-01-29T18:39:19-08:00",
    "input_file": {}
  }
]
